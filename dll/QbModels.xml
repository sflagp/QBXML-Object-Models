<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QbModels</name>
    </assembly>
    <members>
        <member name="T:QbModels.Attributes.MaxOneOfNotNullAttribute">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="M:QbModels.Attributes.MaxOneOfNotNullAttribute.#ctor(System.String,System.Char)">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
            <param name="Values">Delimited string containing list of context objects.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="T:QbModels.Attributes.MaxOneOfTrueAttribute">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="M:QbModels.Attributes.MaxOneOfTrueAttribute.#ctor(System.String,System.Char)">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
            <param name="Values">Delimited string containing list of context objects.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="T:QbModels.Attributes.MinimumListCountAttribute">
            <summary>
                ValidationAttribute to verify that a List object contains a minimum number of items.
            </summary>
        </member>
        <member name="M:QbModels.Attributes.MinimumListCountAttribute.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.Attributes.MinimumListCountAttribute" /> class.</summary>
            <param name="MinCount">The minimum number of items the list should have.</param>
            <param name="MaxCount">The maximum number of items the list should have.</param>
            <param name="IgnoreNulls">Accepts Lists that have not been initialized if set to <c>true</c> [ignore nulls].</param>
        </member>
        <member name="M:QbModels.Attributes.MinimumListCountAttribute.IsValid(System.Object)">
            <summary>Returns true if entity is valid.</summary>
            <param name="value">The object to validate.</param>
            <returns>
                <c>true</c> if the specified values of the entity is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:QbModels.Attributes.MinimumListCountAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>Returns true if entity is valid.</summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns>An instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult">ValidationResult</see> class.</returns>
        </member>
        <member name="T:QbModels.Attributes.RequireDateTimeNotDefaultAttribute">
            <summary>
                ValidationAttribute to make sure that value is required depending on another property.
            </summary>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="M:QbModels.Attributes.RequireDateTimeNotDefaultAttribute.#ctor">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
        </member>
        <member name="T:QbModels.Attributes.RequiredOneOfHaveValueAttribute">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="M:QbModels.Attributes.RequiredOneOfHaveValueAttribute.#ctor(System.String,System.Char)">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
            <param name="Values">Delimited string containing list of context objects.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="T:QbModels.Attributes.RequiredWithAttribute">
            <summary>
                ValidationAttribute to make sure that value is required depending on another property.
            </summary>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="M:QbModels.Attributes.RequiredWithAttribute.#ctor(System.String)">
            <summary>
                ValidationAttribute to make sure that only one object in a list of objects has been initialized.
            </summary>
            <param name="PropertyName">String containing object name to pair with.</param>
        </member>
        <member name="T:QbModels.BaseValidation">
            <summary>
                Class to implement validation methods to validate an entity that has DataAnnotation attributes.
            </summary>
        </member>
        <member name="E:QbModels.BaseValidation.ErrorsChanged">
            <summary>Alerts subscribers of the ErrorsChanged event when errors occur.</summary>
        </member>
        <member name="M:QbModels.BaseValidation.ValidateEntity">
            <summary>
                Validates the entity by processing each property in the entity and validating the values.
            </summary>
        </member>
        <member name="M:QbModels.BaseValidation.ValidateProperties(System.Object)">
            <summary> 
                Validate all the properties of an object and recursively call itself to process sub-entities.
            </summary>
            <param name="source">The source object to validate.</param>
        </member>
        <member name="M:QbModels.BaseValidation.ValidateProperty(System.Object,System.String,System.Object)">
            <summary>
                Validates the property value against any Data Annotation attributes assigned to the property.
            </summary>
            <param name="val">The value of the property.</param>
            <param name="propertyName">Name of the property containing the data annotation attributes.</param>
            <param name="source">Source object containing the property to validate.</param>
        </member>
        <member name="M:QbModels.BaseValidation.GetErrorsList">
            <summary>
                Compiles the list of errors generated from validating the entity.
            </summary>
            <returns>
                List&lt;string&gt; values.
            </returns>
        </member>
        <member name="M:QbModels.BaseValidation.GetErrorsAsString">
            <summary>
                Compiles the list of errors generated from validating the entity into one string value.
            </summary>
            <returns>
                String value with each error in the entity seperated by a line return.
            </returns>
        </member>
        <member name="M:QbModels.BaseValidation.IsEntityValid">
            <summary>
                Run entity validation and determine if there are any validation errors.
            </summary>
            <returns>
              <c>true</c> if [entity validation has ZERO errors]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:QbModels.AccountRetDto">
            <summary>Class object item returned by AccountQueryRq/AccountAddRq/AccountModRq/</summary>
        </member>
        <member name="P:QbModels.AccountRetDto.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID><ListID name="ListIDList">
		<summary>
			<para>ListID to query for.</para>
			<example>
				Example initialization of List for ListID:
				<c>qbRq.ListID = new() { "Quickbooks.ListID" };</c>
			</example>
		</summary>
		<value>
			List of ListID
		</value>
	</ListID>
        </member>
        <member name="P:QbModels.AccountRetDto.TimeCreated">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Date[@name=&quot;TimeCreated&quot;]" />
        </member>
        <member name="P:QbModels.AccountRetDto.TimeModified">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Date[@name=&quot;TimeModified&quot;]" />
        </member>
        <member name="P:QbModels.AccountRetDto.EditSequence">
            <EditSequence>
		<summary>
			Gets or sets the EditSequence.
		</summary>
		<value>string</value>
	</EditSequence>
        </member>
        <member name="P:QbModels.AccountRetDto.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
        </member>
        <member name="P:QbModels.AccountRetDto.FullName">
            <FullName>
		<summary>
			Gets or sets the FullName property.
		</summary>
		<value>string</value>
	</FullName>
        </member>
        <member name="P:QbModels.AccountRetDto.IsActive">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/IsActive" />
        </member>
        <member name="P:QbModels.AccountRetDto.Sublevel">
            <Sublevel>
		<summary>
			Gets or sets the Sublevel.
		</summary>
		<value>int</value>
	</Sublevel>
        </member>
        <member name="P:QbModels.AccountRetDto.AccountType">
            <RegEx name="AccountType">
		<summary>
			<para>
				Gets or sets the account type filter.
				Must be one of:
			</para>
			<code>
				AccountsPayable
				AccountsReceivable
				Bank
				CostOfGoodsSold
				CreditCard
				Equity
				Expense
				FixedAsset
				Income
				LongTermLiability
				NonPosting
				OtherAsset
				OtherCurrentAsset
				OtherCurrentLiability
				OtherExpense
				OtherIncome
			</code>
		</summary>
		<value>The account type to filter for.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.AccountRetDto.SpecialAccountType">
            <RegEx name="SpecialAccountType">
		<summary>
			<para>
				Gets or sets the account type filter.
				Must be one of:
			</para>
			<code>
				AccountsPayable
				AccountsReceivable
				CondenseItemAdjustmentExpenses
				CostOfGoodsSold
				DirectDepositLiabilities
				Estimates
				ExchangeGainLoss
				InventoryAssets
				ItemReceiptAccount
				OpeningBalanceEquity
				PayrollExpenses
				PayrollLiabilities
				PettyCash
				PurchaseOrders
				ReconciliationDifferences
				RetainedEarnings
				SalesOrders
				SalesTaxPayable
				UncategorizedExpenses
				UncategorizedIncome
				UndepositedFunds
			</code>
		</summary>
		<value>The account type to filter for.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.AccountRetDto.AccountNumber">
            <String name="AccountNumber">
		<summary>
			Gets or sets the AccountNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.AccountRetDto.BankNumber">
            <String name="BankNumber">
		<summary>
			Gets or sets the BankNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.AccountRetDto.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.AccountRetDto.Balance">
            <Balance name="Balance">
		<summary>
			Gets or sets the Balance property.
		</summary>
		<value>decimal</value>
	</Balance>
        </member>
        <member name="P:QbModels.AccountRetDto.TotalBalance">
            <Balance name="TotalBalance">
		<summary>
			Gets or sets the TotalBalance property.
		</summary>
		<value>decimal</value>
	</Balance>
        </member>
        <member name="P:QbModels.AccountRetDto.CashFlowClassification">
            <String name="CashFlowClassification">
		<summary>
			Gets or sets the CashFlowClassification property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.AccountRetDto.Parent">
            <DefaultRefDto name="ParentRef">
		<summary>
			<para>Quickbooks Parent reference.</para>
			<example>
				<para>Sample code to specify parent reference.</para>
				<c>qbRq.Parent = new() { FullName = { Your Quickbooks parent name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.AccountRetDto.TaxLineInfo">
            <TaxLineFilter name="TaxLineFilterDto">
		<summary>
			<para>Tax line filter.</para>
			<example>
				<para>Sample code to specify a tax line filter.</para>
				<c>qbRq.TaxLineFilter = new() { TaxLineID = "{Your TaxLineID}", TaxLineName = "{Your TaxLineName}" };</c>
			</example>
		</summary>
	</TaxLineFilter>
        </member>
        <member name="P:QbModels.AccountRetDto.CurrencyRef">
            <DefaultRefDto name="CurrencyFilterDto">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify currency filter.</para>
				<c>qbRq.CurrencyFilter = new() { FullName = { Your Quickbooks account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.AccountRetDto.DataExtRet">
            <summary>Gets or sets the data ext ret.</summary>
            <value>The data ext ret.</value>
        </member>
        <member name="T:QbModels.AdditionalNotesDto">
            <AdditionalNotes name="AdditionalNotesDto">
		<summary>
			<para>AdditionalNotes object.</para>
			<example>
				<para>Sample code to specify an additional note object.</para>
				<c>qbRq.AdditionalNote = new() { Note = "Your note" };</c>
			</example>
		</summary>
	</AdditionalNotes>
        </member>
        <member name="P:QbModels.AdditionalNotesDto.Note">
            <AdditionalNotes name="Note">
		<summary>Gets or sets Note property.</summary>
		<value>string</value>
	</AdditionalNotes>
            <remarks><b>Note: </b>Note is required</remarks>
        </member>
        <member name="T:QbModels.AddressBlockDto">
            <Address name="AddressBlockDto">
		<summary>
			<para>Address block object.</para>
			<example>
				<para>Sample code to specify an address block object.</para>
				<c>qbRq.Address = new() { Addr1 = "123 Main St", Addr2 = "MainCity", Addr3 = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.AddressBlockDto.Addr1">
            <Address name="Addr1">
		<summary>Gets or sets Addr1 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressBlockDto.Addr2">
            <Address name="Addr2">
		<summary>Gets or sets Addr2 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressBlockDto.Addr3">
            <Address name="Addr3">
		<summary>Gets or sets Addr3 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressBlockDto.Addr4">
            <Address name="Addr4">
		<summary>Gets or sets Addr4 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressBlockDto.Addr5">
            <Address name="Addr5">
		<summary>Gets or sets Addr5 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="T:QbModels.AddressDto">
            <Address name="AddressDto">
		<summary>
			<para>Address object.</para>
			<example>
				<para>Sample code to specify an address object.</para>
				<c>qbRq.Address = new() { Addr1 = "123 Main St", City = "MainCity", State = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.Addr1">
            <Address name="Addr1">
		<summary>Gets or sets Addr1 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.Addr2">
            <Address name="Addr2">
		<summary>Gets or sets Addr2 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.Addr3">
            <Address name="Addr3">
		<summary>Gets or sets Addr3 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.Addr4">
            <Address name="Addr4">
		<summary>Gets or sets Addr4 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.Addr5">
            <Address name="Addr5">
		<summary>Gets or sets Addr5 property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.City">
            <Address name="City">
		<summary>Gets or sets City property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.State">
            <Address name="State">
		<summary>Gets or sets State property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.PostalCode">
            <Address name="PostalCode">
		<summary>Gets or sets PostalCode property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.Country">
            <Address name="Country">
		<summary>Gets or sets Country property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="P:QbModels.AddressDto.Note">
            <Address name="Note">
		<summary>Gets or sets Note property.</summary>
		<value>string</value>
	</Address>
        </member>
        <member name="T:QbModels.ContactsDto">
            <summary>Contacts class object</summary>
        </member>
        <member name="P:QbModels.ContactsDto.Salutation">
            <Salutation>
		<summary>
			Gets or sets the Salutation property.
		</summary>
		<value>string</value>
	</Salutation>
        </member>
        <member name="P:QbModels.ContactsDto.FirstName">
            <FirstName>
		<summary>
			Gets or sets the FirstName property.
		</summary>
		<value>string</value>
	</FirstName>
        </member>
        <member name="P:QbModels.ContactsDto.MiddleName">
            <MiddleName>
		<summary>
			Gets or sets the MiddleName property.
		</summary>
		<value>string</value>
	</MiddleName>
        </member>
        <member name="P:QbModels.ContactsDto.LastName">
            <LastName>
		<summary>
			Gets or sets the LastName property.
		</summary>
		<value>string</value>
	</LastName>
        </member>
        <member name="P:QbModels.ContactsDto.JobTitle">
            <JobTitle>
		<summary>
			Gets or sets the JobTitle property.
		</summary>
		<value>string</value>
	</JobTitle>
        </member>
        <member name="P:QbModels.ContactsDto.AdditionalContact">
            <AdditionalContact name="AdditionalContactDto">
		<summary>
			<para>AdditionalContact object.</para>
			<example>
				<para>Sample code to specify an additional contact object.</para>
				<c>qbRq.AdditionalContact = new() { ContactName = "Name of contact" };</c>
			</example>
		</summary>
	</AdditionalContact>
            <remarks><b>Note: </b>AdditionalContact cannot have more than 5 entries</remarks>
        </member>
        <member name="T:QbModels.DataExtRetDto">
            <summary>Class object for DataExtRet</summary>
        </member>
        <member name="P:QbModels.DataExtRetDto.OwnerId">
            <summary>Gets or sets the owner identifier.</summary>
            <value>The owner identifier.</value>
        </member>
        <member name="P:QbModels.DataExtRetDto.DataExtName">
            <summary>Gets or sets the name of the data ext.</summary>
            <value>The name of the data ext.</value>
        </member>
        <member name="P:QbModels.DataExtRetDto.DataExtValue">
            <summary>Gets or sets the data ext value.</summary>
            <value>The data ext value.</value>
        </member>
        <member name="P:QbModels.DataExtRetDto.DataExtType">
            <summary>Gets or sets the type of the data ext.</summary>
            <value>The type of the data ext.</value>
        </member>
        <member name="T:QbModels.DefaultRefDto">
            <summary>Default reference dto for ListID/FullName</summary>
        </member>
        <member name="P:QbModels.DefaultRefDto.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID>
        </member>
        <member name="P:QbModels.DefaultRefDto.FullName">
            <FullName>
		<summary>
			Gets or sets the FullName property.
		</summary>
		<value>string</value>
	</FullName>
        </member>
        <member name="T:QbModels.ExpenseLineAddDto">
            <ExpenseLine name="ExpenseLineAddDto">
		<summary>
			<para>Class object for ExpenseLineAdd.</para>
			<example>
				<para>Sample code to specify an expense line.</para>
				<c>qbRq.ExpenseLine = new() { TxnLineID = "{Your Quickbooks TxnLineID}" };</c>
			</example>
		</summary>
	</ExpenseLine>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.TxnLineID">
            <TxnLineID name="TxnLineID">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnLineID";</c>
			</example>
		</summary>
		<value>
			string of TxnLineID
		</value>
	</TxnLineID><TxnLineID name="TxnLineIDList">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				Example initialization of List for TxnLineID:
				<c>qbRq.TxnLineID = new() { "Quickbooks.TxnLineID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnLineID&gt;
		</value>
	</TxnLineID>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.Account">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;AccountRef&quot;]" />
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.BillableStatus">
            <RegEx name="BillableStatus">
		<summary>
			<para>
				Gets or sets the billable status.
				BillableStatus needs to be one of:
				<code>
					Billable
					NotBillable
					HasBeenBilled
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ExpenseLineAddDto.SalesRep">
            <DefaultRefDto name="SalesRepRef">
		<summary>
			<para>Sales rep reference.</para>
			<example>
				<para>Sample code to specify prefill sales rep reference.</para>
				<c>qbRq.SalesRep = new() { FullName = { Your Quickbooks sales rep name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="T:QbModels.ExpenseLineModDto">
            <ExpenseLine name="ExpenseLineModDto">
		<summary>
			<para>Class object for ExpenseLineMod.</para>
			<example>
				<para>Sample code to specify an expense line mod.</para>
				<c>qbRq.ExpenseLineMod = new() { TxnLineID = "{Your Quickbooks TxnLineID}" };</c>
			</example>
		</summary>
	</ExpenseLine>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.TxnLineID">
            <TxnLineID name="TxnLineID">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnLineID";</c>
			</example>
		</summary>
		<value>
			string of TxnLineID
		</value>
	</TxnLineID><TxnLineID name="TxnLineIDList">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				Example initialization of List for TxnLineID:
				<c>qbRq.TxnLineID = new() { "Quickbooks.TxnLineID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnLineID&gt;
		</value>
	</TxnLineID>
            <remarks><b>Note: </b>TxnLineID is required</remarks>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.Account">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;AccountRef&quot;]" />
        </member>
        <member name="P:QbModels.ExpenseLineModDto.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.Customer">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;Customer&quot;]" />
        </member>
        <member name="P:QbModels.ExpenseLineModDto.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.SalesTaxCodeRef">
            <DefaultRefDto name="SalesTaxCodeRef">
		<summary>
			<para>Sales tax code reference.</para>
			<example>
				<para>Sample code to specify sales tax code reference.</para>
				<c>qbRq.SalesTaxCode = new() { FullName = { Your Quickbooks sales tax code } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.BillableStatus">
            <RegEx name="BillableStatus">
		<summary>
			<para>
				Gets or sets the billable status.
				BillableStatus needs to be one of:
				<code>
					Billable
					NotBillable
					HasBeenBilled
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ExpenseLineModDto.SalesRep">
            <DefaultRefDto name="SalesRepRef">
		<summary>
			<para>Sales rep reference.</para>
			<example>
				<para>Sample code to specify prefill sales rep reference.</para>
				<c>qbRq.SalesRep = new() { FullName = { Your Quickbooks sales rep name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="T:QbModels.ItemGroupLineAddDto">
            <ItemLine name="ItemLineGroupAddDto">
		<summary>
			<para>Class object for ItemLineGroupAdd.</para>
			<example>
				<para>Sample code to specify an item line group.</para>
				<c>qbRq.ItemLineGroupAdd = new() { ItemGroup = new() { FullName = "{Quickbooks Item Group name}" } };</c>
			</example>
		</summary>
	</ItemLine>
        </member>
        <member name="P:QbModels.ItemGroupLineAddDto.ItemGroup">
            <DefaultRefDto name="ItemGroupRef">
		<summary>
			<para>ItemGroup reference.</para>
			<example>
				<para>Sample code to specify ItemGroup reference.</para>
				<c>qbRq.ItemGroup = new() { FullName = { Your Quickbooks item group name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemGroupLineAddDto.Quantity">
            <Decimal name="Quantity">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemGroupLineAddDto.UnitOfMeasure">
            <String name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemGroupLineAddDto.InventorySiteRef">
            <DefaultRefDto name="InventorySiteRef">
		<summary>
			<para>InventorySite reference.</para>
			<example>
				<para>Sample code to specify InventorySite reference.</para>
				<c>qbRq.InventorySite = new() { FullName = { Your Quickbooks inventory site name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemGroupLineAddDto.InventorySiteLocationRef">
            <DefaultRefDto name="InventorySiteLocationRef">
		<summary>
			<para>InventorySiteLocation reference.</para>
			<example>
				<para>Sample code to specify InventorySiteLocation reference.</para>
				<c>qbRq.InventorySiteLocation = new() { FullName = { Your Quickbooks inventory site location name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemGroupLineAddDto.DataExt">
            <DataExtRet name="DataExtRetDto">
		<summary>
			<para>Class object for DataExtRet.</para>
			<example>
				<para>Sample code to specify an data extension.</para>
				<c>qbRq.DataExtRet = new() { OwnerID = "{Quickbooks OwnerID}, DataExtName = "{Data ext name}" };</c>
			</example>
		</summary>
	</DataExtRet>
        </member>
        <member name="T:QbModels.ItemGroupLineModDto">
            <ItemLine name="ItemLineGroupModDto">
		<summary>
			<para>Class object for ItemLineGroupMod.</para>
			<example>
				<para>Sample code to specify an item line group mod.</para>
				<c>qbRq.ItemLineGroupMod = new() { ItemGroup = new() { FullName = "{Quickbooks Item Group name}" } };</c>
			</example>
		</summary>
	</ItemLine>
        </member>
        <member name="P:QbModels.ItemGroupLineModDto.TxnLineID">
            <TxnLineID name="TxnLineID">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnLineID";</c>
			</example>
		</summary>
		<value>
			string of TxnLineID
		</value>
	</TxnLineID><TxnLineID name="TxnLineIDList">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				Example initialization of List for TxnLineID:
				<c>qbRq.TxnLineID = new() { "Quickbooks.TxnLineID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnLineID&gt;
		</value>
	</TxnLineID>
            <remarks><b>Note: </b>TxnLineID is required</remarks>
        </member>
        <member name="P:QbModels.ItemGroupLineModDto.ItemGroup">
            <DefaultRefDto name="ItemGroupRef">
		<summary>
			<para>ItemGroup reference.</para>
			<example>
				<para>Sample code to specify ItemGroup reference.</para>
				<c>qbRq.ItemGroup = new() { FullName = { Your Quickbooks item group name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemGroupLineModDto.Quantity">
            <Decimal name="Quantity">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemGroupLineModDto.UnitOfMeasure">
            <String name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemGroupLineModDto.OverrideUOMSet">
            <DefaultRefDto name="OverrideUOMSetRef">
		<summary>
			<para>Override UOM set reference.</para>
			<example>
				<para>Sample code to specify override UOM set reference.</para>
				<c>qbRq.OverrideUOMSet = new() { FullName = { Your Quickbooks override UOM set name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemGroupLineModDto.ItemLine">
            <ItemLine name="ItemLineModDto">
		<summary>
			<para>Class object for ItemLineMod.</para>
			<example>
				<para>Sample code to specify an item line mod.</para>
				<c>qbRq.ItemLineMod = new() { Item = new() { FullName = "{Quickbooks Item name}" } };</c>
			</example>
		</summary>
	</ItemLine>
        </member>
        <member name="T:QbModels.ItemLineAddDto">
            <ItemLine name="ItemLineAddDto">
		<summary>
			<para>Class object for ItemLineAdd.</para>
			<example>
				<para>Sample code to specify an item line.</para>
				<c>qbRq.ItemLineAdd = new() { Item = new() { FullName = "{Quickbooks Item name}" } };</c>
			</example>
		</summary>
	</ItemLine>
        </member>
        <member name="P:QbModels.ItemLineAddDto.Item">
            <DefaultRefDto name="ItemRef">
		<summary>
			<para>Item reference.</para>
			<example>
				<para>Sample code to specify Item reference.</para>
				<c>qbRq.Item = new() { FullName = { Your Quickbooks item name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineAddDto.InventorySite">
            <DefaultRefDto name="InventorySiteRef">
		<summary>
			<para>InventorySite reference.</para>
			<example>
				<para>Sample code to specify InventorySite reference.</para>
				<c>qbRq.InventorySite = new() { FullName = { Your Quickbooks inventory site name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineAddDto.InventorySiteLocation">
            <DefaultRefDto name="InventorySiteLocationRef">
		<summary>
			<para>InventorySiteLocation reference.</para>
			<example>
				<para>Sample code to specify InventorySiteLocation reference.</para>
				<c>qbRq.InventorySiteLocation = new() { FullName = { Your Quickbooks inventory site location name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineAddDto.SerialNumber">
            <String name="SerialNumber">
		<summary>
			Gets or sets the SerialNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with LotNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemLineAddDto.LotNumber">
            <String name="LotNumber">
		<summary>
			Gets or sets the LotNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with SerialNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemLineAddDto.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemLineAddDto.Quantity">
            <Decimal name="Quantity">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemLineAddDto.UnitOfMeasure">
            <Decimal name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemLineAddDto.Cost">
            <Decimal name="Cost">
		<summary>
			Gets or sets the Cost property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemLineAddDto.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemLineAddDto.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineAddDto.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineAddDto.BillableStatus">
            <RegEx name="BillableStatus">
		<summary>
			<para>
				Gets or sets the billable status.
				BillableStatus needs to be one of:
				<code>
					Billable
					NotBillable
					HasBeenBilled
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ItemLineAddDto.OverrideItemAccount">
            <DefaultRefDto name="OverrideItemAccountRef">
		<summary>
			<para>Override item account reference.</para>
			<example>
				<para>Sample code to specify override item account reference.</para>
				<c>qbRq.OverrideItemAccount = new() { FullName = { Your Quickbooks override item account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineAddDto.LinkToTxn">
            <LinkedToTxn name="LinkedToTxnDto">
		<summary>
			<para>Class object for LinkedToTxn.</para>
			<example>
				<para>Sample code to specify an linked transaction.</para>
				<c>qbRq.LinkedToTxn = new() { TxnID = "{Your Quickbooks TxnID}", TxnLineID = "{Your Quickbooks TxnLineID}" };</c>
			</example>
		</summary>
	</LinkedToTxn>
        </member>
        <member name="P:QbModels.ItemLineAddDto.SalesRep">
            <DefaultRefDto name="SalesRepRef">
		<summary>
			<para>Sales rep reference.</para>
			<example>
				<para>Sample code to specify prefill sales rep reference.</para>
				<c>qbRq.SalesRep = new() { FullName = { Your Quickbooks sales rep name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineAddDto.DataExtRet">
            <DataExtRet name="DataExtRetDto">
		<summary>
			<para>Class object for DataExtRet.</para>
			<example>
				<para>Sample code to specify an data extension.</para>
				<c>qbRq.DataExtRet = new() { OwnerID = "{Quickbooks OwnerID}, DataExtName = "{Data ext name}" };</c>
			</example>
		</summary>
	</DataExtRet>
        </member>
        <member name="T:QbModels.ItemLineModDto">
            <ItemLine name="ItemLineModDto">
		<summary>
			<para>Class object for ItemLineMod.</para>
			<example>
				<para>Sample code to specify an item line mod.</para>
				<c>qbRq.ItemLineMod = new() { Item = new() { FullName = "{Quickbooks Item name}" } };</c>
			</example>
		</summary>
	</ItemLine>
        </member>
        <member name="P:QbModels.ItemLineModDto.TxnLineID">
            <TxnLineID name="TxnLineID">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnLineID";</c>
			</example>
		</summary>
		<value>
			string of TxnLineID
		</value>
	</TxnLineID><TxnLineID name="TxnLineIDList">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				Example initialization of List for TxnLineID:
				<c>qbRq.TxnLineID = new() { "Quickbooks.TxnLineID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnLineID&gt;
		</value>
	</TxnLineID>
        </member>
        <member name="P:QbModels.ItemLineModDto.Item">
            <DefaultRefDto name="ItemRef">
		<summary>
			<para>Item reference.</para>
			<example>
				<para>Sample code to specify Item reference.</para>
				<c>qbRq.Item = new() { FullName = { Your Quickbooks item name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineModDto.InventorySite">
            <DefaultRefDto name="InventorySiteRef">
		<summary>
			<para>InventorySite reference.</para>
			<example>
				<para>Sample code to specify InventorySite reference.</para>
				<c>qbRq.InventorySite = new() { FullName = { Your Quickbooks inventory site name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineModDto.InventorySiteLocation">
            <DefaultRefDto name="InventorySiteLocationRef">
		<summary>
			<para>InventorySiteLocation reference.</para>
			<example>
				<para>Sample code to specify InventorySiteLocation reference.</para>
				<c>qbRq.InventorySiteLocation = new() { FullName = { Your Quickbooks inventory site location name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineModDto.SerialNumber">
            <String name="SerialNumber">
		<summary>
			Gets or sets the SerialNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with LotNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemLineModDto.LotNumber">
            <String name="LotNumber">
		<summary>
			Gets or sets the LotNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with SerialNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemLineModDto.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemLineModDto.Quantity">
            <Decimal name="Quantity">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemLineModDto.UnitOfMeasure">
            <String name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ItemLineModDto.OverrideUOMSet">
            <DefaultRefDto name="OverrideUOMSetRef">
		<summary>
			<para>Override UOM set reference.</para>
			<example>
				<para>Sample code to specify override UOM set reference.</para>
				<c>qbRq.OverrideUOMSet = new() { FullName = { Your Quickbooks override UOM set name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineModDto.Cost">
            <Decimal name="Cost">
		<summary>
			Gets or sets the Cost property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemLineModDto.CostOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ItemLineModDto.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.ItemLineModDto.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ItemLineModDto.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineModDto.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.ItemLineModDto.BillableStatus">
            <RegEx name="BillableStatus">
		<summary>
			<para>
				Gets or sets the billable status.
				BillableStatus needs to be one of:
				<code>
					Billable
					NotBillable
					HasBeenBilled
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ItemLineModDto.OverrideItemAccount">
            <DefaultRefDto name="OverrideItemAccountRef">
		<summary>
			<para>Override item account reference.</para>
			<example>
				<para>Sample code to specify override item account reference.</para>
				<c>qbRq.OverrideItemAccount = new() { FullName = { Your Quickbooks override item account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="T:QbModels.LinkToTxnDto">
            <LinkedToTxn name="LinkedToTxnDto">
		<summary>
			<para>Class object for LinkedToTxn.</para>
			<example>
				<para>Sample code to specify an linked transaction.</para>
				<c>qbRq.LinkedToTxn = new() { TxnID = "{Your Quickbooks TxnID}", TxnLineID = "{Your Quickbooks TxnLineID}" };</c>
			</example>
		</summary>
	</LinkedToTxn>
        </member>
        <member name="P:QbModels.LinkToTxnDto.TxnID">
            <TxnID name="TxnID">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnID";</c>
			</example>
		</summary>
		<value>
			string of TxnID
		</value>
	</TxnID>
            <remarks><b>Note: </b>TxnID is required</remarks>
        </member>
        <member name="P:QbModels.LinkToTxnDto.TxnLineID">
            <TxnLineID name="TxnLineID">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnLineID";</c>
			</example>
		</summary>
		<value>
			string of TxnLineID
		</value>
	</TxnLineID><TxnLineID name="TxnLineIDList">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				Example initialization of List for TxnLineID:
				<c>qbRq.TxnLineID = new() { "Quickbooks.TxnLineID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnLineID&gt;
		</value>
	</TxnLineID>
            <remarks><b>Note: </b>TxnLineID is required</remarks>
        </member>
        <member name="T:QbModels.TaxLineDto">
            <TaxLineFilter name="TaxLineFilterDto">
		<summary>
			<para>Tax line filter.</para>
			<example>
				<para>Sample code to specify a tax line filter.</para>
				<c>qbRq.TaxLineFilter = new() { TaxLineID = "{Your TaxLineID}", TaxLineName = "{Your TaxLineName}" };</c>
			</example>
		</summary>
	</TaxLineFilter>
        </member>
        <member name="P:QbModels.TaxLineDto.TaxLineID">
            <TaxLineFilter name="TaxLineID">
		<summary>Gets or sets TaxLineID property.</summary>
		<value>DateTime</value>
	</TaxLineFilter>
        </member>
        <member name="P:QbModels.TaxLineDto.TaxLineName">
            <TaxLineFilter name="TaxLineName">
		<summary>Gets or sets TaxLineName property.</summary>
		<value>DateTime</value>
	</TaxLineFilter>
        </member>
        <member name="T:QbModels.CreditCardTxnInfoDto">
            <CreditCardTxnInfo name="CreditCardTxnInfoDto">
		<summary>
			<para>Class object for CreditCardTxnInfo.</para>
			<example>
				<para>Sample code to specify a CreditCardTxnInfo.</para>
				<code>
					qbRq.CreditCardTxnInfo = new();
					qbRq.CreditCardTxnInfo.CreditCardTxnInputInfo = new();
					qbRq.CreditCardTxnInfo.CreditCardTxnResultInfo = new();
				</code>
			</example>
		</summary>
	</CreditCardTxnInfo>
        </member>
        <member name="P:QbModels.CreditCardTxnInfoDto.CreditCardTxnInputInfo">
            <summary>Gets or sets the credit card TXN input information.</summary>
            <value>The credit card TXN input information.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnInfoDto.CreditCardTxnResultInfo">
            <summary>Gets or sets the credit card TXN result information.</summary>
            <value>The credit card TXN result information.</value>
        </member>
        <member name="T:QbModels.CreditCardTxnInputInfoDto">
            <summary>CreditCardTxnInputInfoDto</summary>
        </member>
        <member name="P:QbModels.CreditCardTxnInputInfoDto.TransactionMode">
            <RegEx name="TransactionMode">
		<summary>
			<para>
				Gets or sets the TransactionMode.
				TransactionMode needs to be one of:
				<code>
					CardNotPresent
					CardPresent
				</code>
			</para>
		</summary>
		<value>The transaction detail level.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.CreditCardTxnInputInfoDto.CreditCardTxnType">
            <RegEx name="CreditCardTxnType">
		<summary>
			<para>
				Gets or sets the credit card transaction type.
				CreditCardTxnType needs to be one of:
				<code>
					Capture
					ChargeRefund
					VoiceAuthorization
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="T:QbModels.CreditCardTxnResultInfo">
            <summary>CreditCardTxnResultInfo</summary>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.ResultCode">
            <summary>Gets or sets the result code.</summary>
            <value>The result code.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.ResultMessage">
            <summary>Gets or sets the result message.</summary>
            <value>The result message.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.CreditCardTransID">
            <summary>Gets or sets the credit card trans identifier.</summary>
            <value>The credit card trans identifier.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.MerchantAccountNumber">
            <summary>Gets or sets the merchant account number.</summary>
            <value>The merchant account number.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.AuthorizationCode">
            <summary>Gets or sets the authorization code.</summary>
            <value>The authorization code.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.AVSStreet">
            <summary>Gets or sets the avs street.</summary>
            <value>The avs street.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.AVSZip">
            <summary>Gets or sets the avs zip.</summary>
            <value>The avs zip.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.CardSecurityCodeMatch">
            <summary>Gets or sets the card security code match.</summary>
            <value>The card security code match.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.ReconBatchID">
            <summary>Gets or sets the recon batch identifier.</summary>
            <value>The recon batch identifier.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.PaymentGroupingCode">
            <summary>Gets or sets the payment grouping code.</summary>
            <value>The payment grouping code.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.PaymentStatus">
            <summary>Gets or sets the payment status.</summary>
            <value>The payment status.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.TxnAuthorizationTime">
            <summary>Gets or sets the TXN authorization time.</summary>
            <value>The TXN authorization time.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.TxnAuthorizationStamp">
            <summary>Gets or sets the TXN authorization stamp.</summary>
            <value>The TXN authorization stamp.</value>
        </member>
        <member name="P:QbModels.CreditCardTxnResultInfo.ClientTransID">
            <summary>Gets or sets the client trans identifier.</summary>
            <value>The client trans identifier.</value>
        </member>
        <member name="T:QbModels.DeletedDateRangeFilterDto">
            <DeletedDateRangeFilter name="DeletedDateRangeFilterDto">
		<summary>
			<para>Deleted date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromDeletedDate = DateTime.Today.AddDays(-7), ToDeletedDate = DateTime.Now };</c>
			</example>
		</summary>
	</DeletedDateRangeFilter>
        </member>
        <member name="P:QbModels.DeletedDateRangeFilterDto.FromDeletedDate">
            <DeletedDateRangeFilter name="FromDeletedDate">
		<summary>Gets or sets FromDeletedDate to set transaction start date to search from.</summary>
		<value>DateTime</value>
	</DeletedDateRangeFilter>
        </member>
        <member name="P:QbModels.DeletedDateRangeFilterDto.FromDeletedDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.DeletedDateRangeFilterDto.ToDeletedDate">
            <DeletedDateRangeFilter name="ToDeletedDate">
		<summary>Gets or sets ToDeletedDate to set transaction end date to search to.</summary>
		<value>DateTime</value>
	</DeletedDateRangeFilter>
        </member>
        <member name="P:QbModels.DeletedDateRangeFilterDto.ToDeletedDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="T:QbModels.EntityFilterDto">
            <EntityFilter name="EntityFilterDto">
		<summary>
			<para>Filter by Quickbooks entity.</para>
			<example>
				<para>Sample code to specify entity filter.</para>
				<c>qbRq.EntityFilter = new() { FullName = { Your Quickbooks entity name } };</c>
			</example>
		</summary>
	</EntityFilter>
        </member>
        <member name="P:QbModels.EntityFilterDto.ListID">
            <EntityFilter name="ListID">
		<summary>
			List of ListID strings to query for
			<para>
				<example>
					Example:
					<code>qbRq.AccountFilter = new() { ListID = new() { "{ListID from your Quickbooks file}" } };</code>
				</example>
			</para>
		</summary>
		<value>List of string</value>
	</EntityFilter>
        </member>
        <member name="P:QbModels.EntityFilterDto.FullName">
            <EntityFilter name="FullName">
		<summary>
			List of FullName string to query for
			<para>
				<example>
					Example:
					<code>qbRq.AccountFilter = new() { FullName = new() { "SampleAccountName" } };</code>
				</example>
			</para>
		</summary>
		<value>List of string</value>
	</EntityFilter>
        </member>
        <member name="P:QbModels.EntityFilterDto.ListIDWithChildren">
            <EntityFilter name="ListIDWithChildren">
		<summary>
			List of ListID strings to query for
			<para>
				<example>
					Example:
					<code>qbRq.AccountFilter = new() { ListIDWithChildren = new() { "{ListID from your Quickbooks file}" } };</code>
				</example>
			</para>
		</summary>
		<value>List of string</value>
	</EntityFilter>
        </member>
        <member name="P:QbModels.EntityFilterDto.FullNameWithChildren">
            <EntityFilter name="FullNameWithChildren">
		<summary>
			List of FullName string to query for
			<para>
				<example>
					Example:
					<code>qbRq.AccountFilter = new() { FullNameWithChildren = new() { "SampleAccountName" } };</code>
				</example>
			</para>
		</summary>
		<value>List of string</value>
	</EntityFilter>
        </member>
        <member name="T:QbModels.ModifiedDateRangeFilterDto">
            <ModifiedDateRangeFilter name="ModifiedDateRangeFilterDto">
		<summary>
			<para>Date range filter by date modified.</para>
			<example>
				<para>Sample code to specify modified date range for 1 week.</para>
				<c>qbRq.ModifiedDateRangeFilter = new() { FromModifiedDate = DateTime.Today.AddDays(-7), ToModifiedDate = DateTime.Now };</c>
			</example>
		</summary>
	</ModifiedDateRangeFilter>
        </member>
        <member name="P:QbModels.ModifiedDateRangeFilterDto.FromModifiedDate">
            <ModifiedDateRangeFilter name="FromModifiedDate">
		<summary>Gets or sets FromModifiedDate to set starting modified date to search from.</summary>
		<value>DateTime</value>
	</ModifiedDateRangeFilter>
        </member>
        <member name="P:QbModels.ModifiedDateRangeFilterDto.FromModifiedDateOverload">
            <summary>Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.</summary>
        </member>
        <member name="P:QbModels.ModifiedDateRangeFilterDto.ToModifiedDate">
            <ModifiedDateRangeFilter name="ToModifiedDate">
		<summary>Gets or sets ToModifiedDate to set ending modified date to search to.</summary>
		<value>DateTime</value>
	</ModifiedDateRangeFilter>
        </member>
        <member name="P:QbModels.ModifiedDateRangeFilterDto.ToModifiedDateOverload">
            <summary>Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.</summary>
        </member>
        <member name="T:QbModels.NameFilterDto">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/NameRangeFilter[@name=&quot;NameFilterDto&quot;]" />
        </member>
        <member name="P:QbModels.NameFilterDto.MatchCriterion">
            <RegEx name="MatchCriterion">
		<summary>
			Gets or sets the match criterion.
			MatchCriterion needs to be one of:
			<code>
				StartsWith
				Contains
				EndsWith
			</code>
		</summary>
		<value>The match criterion.</value>
	</RegEx>
            <remarks><b>Note: </b>MatchCriterion is required</remarks>
        </member>
        <member name="P:QbModels.NameFilterDto.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required</remarks>
        </member>
        <member name="T:QbModels.NameRangeFilterDto">
            <NameRangeFilter name="NameRangeFilterDto">
		<summary>
			<para>Name range filter for lists.</para>
			<example>
				<para>Sample code to specify a list name range from A to ZZ.</para>
				<c>qbRq.NameRangeFilter = new() { FromName = "A", ToName = "ZZ" };</c>
			</example>
		</summary>
	</NameRangeFilter>
        </member>
        <member name="P:QbModels.NameRangeFilterDto.FromName">
            <NameRangeFilter name="FromName">
		<summary>Gets or sets FromName to set list starting name to search from.</summary>
		<value>DateTime</value>
	</NameRangeFilter>
        </member>
        <member name="P:QbModels.NameRangeFilterDto.ToName">
            <NameRangeFilter name="ToName">
		<summary>Gets or sets ToName to set list ending name to search to.</summary>
		<value>DateTime</value>
	</NameRangeFilter>
        </member>
        <member name="T:QbModels.RefNumberFilterDto">
            <RefNumberFilter name="RefNumberFilterDto">
		<summary>
			<para>RefNumber range filter for qryRq.</para>
			<example>
				<para>Sample code to specify a RefNumberFilter.</para>
				<c>qbRq.RefNumberFilter = new() { RefNumber = "123", MatchCriterion = "StartsWith" };</c>
			</example>
		</summary>
	</RefNumberFilter>
        </member>
        <member name="P:QbModels.RefNumberFilterDto.MatchCriterion">
            <RegEx name="MatchCriterion">
		<summary>
			Gets or sets the match criterion.
			MatchCriterion needs to be one of:
			<code>
				StartsWith
				Contains
				EndsWith
			</code>
		</summary>
		<value>The match criterion.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.RefNumberFilterDto.RefNumber">
            <String name="RefNumberList">
		<summary>
			<para>RefNumber to query for.</para>
			<example>
				Example initialization of List for RefNumber:
				<c>qbRq.RefNumber = new() { "Your RefNumber" };</c>
			</example>
		</summary>
		<value>List&lt;RefNumber&gt;</value>
	</String>
        </member>
        <member name="T:QbModels.TimeTrackingEntityFilterDto">
            <TimeTrackingEntityFilter name="TimeTrackingEntityFilterDto">
		<summary>
			<para>Class object for TimeTrackingEntityFilter.</para>
			<example>
				<para>Sample code to specify a TimeTrackingEntityFilter.</para>
				<c>qbRq.TimeTrackingEntityFilter = new() { FullName = "{Name of time tracking entity}" };</c>
			</example>
		</summary>
	</TimeTrackingEntityFilter>
        </member>
        <member name="P:QbModels.TimeTrackingEntityFilterDto.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID>
        </member>
        <member name="P:QbModels.TimeTrackingEntityFilterDto.FullName">
            <FullName>
		<summary>
			Gets or sets the FullName property.
		</summary>
		<value>string</value>
	</FullName>
        </member>
        <member name="T:QbModels.TotalBalanceFilterDto">
            <Balance name="TotalBalanceFilterDto">
		<summary>
			<para>Total balance filter.</para>
			<example>
				<para>Sample code to specify a total balance filter.</para>
				<c>qbRq.TotalBalanceFilter = new() { Operator = "{Quickbooks Operator}", Amount = 123.45 };</c>
			</example>
		</summary>
	</Balance>
        </member>
        <member name="P:QbModels.TotalBalanceFilterDto.Operator">
            <Balance name="Operator">
		<summary>
			<para>Gets or sets Operator property.</para>
			<remarks>
				Must be one of:
				<code>
					LessThanEqual
					LessThan
					Equal
					GreaterThanEqual
					GreaterThan
				</code>
			</remarks>
		</summary>
		<value>string</value>
	</Balance>
        </member>
        <member name="P:QbModels.TotalBalanceFilterDto.Amount">
            <Balance name="Amount">
		<summary>Gets or sets Amount property.</summary>
		<value>decimal</value>
	</Balance>
            <remarks><b>Note: </b>Amount is required</remarks>
        </member>
        <member name="P:QbModels.TotalBalanceFilterDto.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="T:QbModels.TransactionAccountFilterDto">
            <TransactionFilter name="TransactionAccountFilterDto">
		<summary>
			<para>Transaction account range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction account reference number.</para>
				<c>qbRq.TransactionAccountFilter = new() { FullName = "{Quickbooks item name}" };</c>
			</example>
		</summary>
	</TransactionFilter>
        </member>
        <member name="P:QbModels.TransactionAccountFilterDto.AccountTypeFilter">
            <RegEx name="AccountType">
		<summary>
			<para>
				Gets or sets the account type filter.
				Must be one of:
			</para>
			<code>
				AccountsPayable
				AccountsReceivable
				Bank
				CostOfGoodsSold
				CreditCard
				Equity
				Expense
				FixedAsset
				Income
				LongTermLiability
				NonPosting
				OtherAsset
				OtherCurrentAsset
				OtherCurrentLiability
				OtherExpense
				OtherIncome
			</code>
		</summary>
		<value>The account type to filter for.</value>
	</RegEx>
        </member>
        <member name="T:QbModels.TransactionEntityFilterDto">
            <TransactionFilter name="TransactionEntityFilterDto">
		<summary>
			<para>Transaction entity range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction entity reference number.</para>
				<c>qbRq.TransactionEntityFilter = new() { FullName = "{Quickbooks item name}" };</c>
			</example>
		</summary>
	</TransactionFilter>
        </member>
        <member name="P:QbModels.TransactionEntityFilterDto.EntityTypeFilter">
            <RegEx name="EntityType">
		<summary>
			<para>
				Gets or sets the entity type.
				EntityType needs to be one of:
				<code>
					Customer
					Employee
					OtherName
					Vendor
				</code>
			</para>
		</summary>
		<value>The entity type.</value>
	</RegEx>
        </member>
        <member name="T:QbModels.TransactionItemFilterDto">
            <TransactionFilter name="TransactionItemFilterDto">
		<summary>
			<para>Transaction item range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction item reference number.</para>
				<c>qbRq.TransactionItemFilter = new() { FullName = "{Quickbooks item name}" };</c>
			</example>
		</summary>
	</TransactionFilter>
        </member>
        <member name="P:QbModels.TransactionItemFilterDto.ItemTypeTypeFilter">
            <RegEx name="ItemType">
		<summary>
			Transaction item type filter for transactions.
			Must be one of:
			<code>
				AllExceptFixedAsset
				Assembly
				Discount
				FixedAsset
				Inventory
				InventoryAndAssembly
				NonInventory
				OtherCharge
				Payment
				Sales
				SalesTax
				Service
			</code>
		</summary>
		<value>string</value>
	</RegEx>
        </member>
        <member name="T:QbModels.TxnDateRangeFilterDto">
            <TxnDateRangeFilter name="TxnDateRangeFilterDto">
		<summary>
			<para>Date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromTxnDate = DateTime.Today.AddDays(-7), ToTxnDate = DateTime.Now };</c>
			</example>
		</summary>
	</TxnDateRangeFilter>
        </member>
        <member name="P:QbModels.TxnDateRangeFilterDto.FromTxnDate">
            <TxnDateRangeFilter name="FromTxnDate">
		<summary>Gets or sets FromTxnDate to set transaction start date to search from.</summary>
		<value>DateTime</value>
	</TxnDateRangeFilter>
        </member>
        <member name="P:QbModels.TxnDateRangeFilterDto.FromTxnDateOverload">
            <summary>Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.</summary>
        </member>
        <member name="P:QbModels.TxnDateRangeFilterDto.ToTxnDate">
            <TxnDateRangeFilter name="ToTxnDate">
		<summary>Gets or sets ToTxnDate to set transaction end date to search to.</summary>
		<value>DateTime</value>
	</TxnDateRangeFilter>
        </member>
        <member name="P:QbModels.TxnDateRangeFilterDto.ToTxnDateOverload">
            <summary>Overloaded property used for XmlSerialization.  Use ToTxnDate property to update.</summary>
        </member>
        <member name="P:QbModels.JournalCreditLineDto.BillableStatus">
            <summary>
                Gets or sets the billable status.
                Must be one of Billable|NotBillable|HasBeenBilled
                </summary>
            <value>The billable status.</value>
        </member>
        <member name="P:QbModels.JournalDebitLineDto.BillableStatus">
            <summary>
                <para>
                    Gets or sets the billable status.
                    Must be one of: 
                </para>
                <code>
                    Billable
                    NotBillable
                    HasBeenBilled
                </code>
                </summary>
            <value>The billable status.</value>
        </member>
        <member name="P:QbModels.JournalLineModDto.BillableStatus">
            <summary>
                <para>
                    Gets or sets the billable status.
                    Must be one of: 
                </para>
                <code>
                    Billable
                    NotBillable
                    HasBeenBilled
                </code>
                </summary>
            <value>The billable status.</value>
        </member>
        <member name="P:QbModels.PaymentMethodRetDto.PaymentMethodType">
            <summary>
                Gets or sets the type of the payment method.
                Must be one of AmericanExpress|Cash|Check|DebitCard|Discover|ECheck|GiftCard|MasterCard|Other|OtherCreditCard|Visa
            </summary>
            <value>The type of the payment method.</value>
        </member>
        <member name="T:QbModels.SalesReceiptLineAddDto">
            <SalesReceipt name="SalesReceiptLineAddDto">
		<summary>
			<para>Class object for SalesReceiptLineAdd.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineAdd.</para>
				<code>
					qbRq.SalesReceiptLineAdd = new();
					qbRq.SalesReceiptLineAdd.Add( new() { FullName = "{Name of time tracking entity}" });
				</code>
			</example>
		</summary>
	</SalesReceipt>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.Item">
            <DefaultRefDto name="ItemRef">
		<summary>
			<para>Item reference.</para>
			<example>
				<para>Sample code to specify Item reference.</para>
				<c>qbRq.Item = new() { FullName = { Your Quickbooks item name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.Quantity">
            <Decimal name="Quantity">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.UnitOfMeasure">
            <String name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.Rate">
            <Decimal name="Rate">
		<summary>
			Gets or sets the Rate property.
		</summary>
		<value>decimal</value>
	</Decimal>
            <remarks><b>Note: </b>Cannot be combined with RatePercent or PriceLevel</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.RatePercent">
            <String name="RatePercent">
		<summary>
			Gets or sets the RatePercent.
		</summary>
		<value>string</value>
	</String>
            <remarks><b>Note: </b>Cannot be combined with Rate or PriceLevel</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.PriceLevel">
            <DefaultRefDto name="PriceLevelRef">
		<summary>
			<para>Prefill account reference.</para>
			<example>
				<para>Sample code to specify price level reference.</para>
				<c>qbRq.PriceLevel = new() { FullName = { Your Quickbooks price level name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Note: </b>Cannot be combined with Rate or RatePercent</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.OptionForPriceRuleConflict">
            <RegEx name="OptionForPriceRuleConflict">
		<summary>
			<para>
				Gets or sets the option for price rule conflict.
				OptionForPriceRuleConflict needs to be one of:
				<code>
					Zero
					BasePrice
				</code>
			</para>
		</summary>
		<value>The paid status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.InventorySite">
            <DefaultRefDto name="InventorySiteRef">
		<summary>
			<para>InventorySite reference.</para>
			<example>
				<para>Sample code to specify InventorySite reference.</para>
				<c>qbRq.InventorySite = new() { FullName = { Your Quickbooks inventory site name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.InventorySiteLocation">
            <DefaultRefDto name="InventorySiteLocationRef">
		<summary>
			<para>InventorySiteLocation reference.</para>
			<example>
				<para>Sample code to specify InventorySiteLocation reference.</para>
				<c>qbRq.InventorySiteLocation = new() { FullName = { Your Quickbooks inventory site location name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.SerialNumber">
            <String name="SerialNumber">
		<summary>
			Gets or sets the SerialNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with LotNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.LotNumber">
            <String name="LotNumber">
		<summary>
			Gets or sets the LotNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with SerialNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.ServiceDate">
            <Date name="ServiceDate">
		<summary>
			Gets or sets the ServiceDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.ServiceDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.SalesTaxCode">
            <DefaultRefDto name="SalesTaxCodeRef">
		<summary>
			<para>Sales tax code reference.</para>
			<example>
				<para>Sample code to specify sales tax code reference.</para>
				<c>qbRq.SalesTaxCode = new() { FullName = { Your Quickbooks sales tax code } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.OverrideItemAccount">
            <DefaultRefDto name="OverrideItemAccountRef">
		<summary>
			<para>Override item account reference.</para>
			<example>
				<para>Sample code to specify override item account reference.</para>
				<c>qbRq.OverrideItemAccount = new() { FullName = { Your Quickbooks override item account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.Other1">
            <String name="Other1">
		<summary>
			Gets or sets the Other1 property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.Other2">
            <String name="Other2">
		<summary>
			Gets or sets the Other2 property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.CreditCardTxnInfo">
            <CreditCardTxnInfo name="CreditCardTxnInfoDto">
		<summary>
			<para>Class object for CreditCardTxnInfo.</para>
			<example>
				<para>Sample code to specify a CreditCardTxnInfo.</para>
				<code>
					qbRq.CreditCardTxnInfo = new();
					qbRq.CreditCardTxnInfo.CreditCardTxnInputInfo = new();
					qbRq.CreditCardTxnInfo.CreditCardTxnResultInfo = new();
				</code>
			</example>
		</summary>
	</CreditCardTxnInfo>
        </member>
        <member name="P:QbModels.SalesReceiptLineAddDto.DataExtRet">
            <DataExtRet name="DataExtRetDto">
		<summary>
			<para>Class object for DataExtRet.</para>
			<example>
				<para>Sample code to specify an data extension.</para>
				<c>qbRq.DataExtRet = new() { OwnerID = "{Quickbooks OwnerID}, DataExtName = "{Data ext name}" };</c>
			</example>
		</summary>
	</DataExtRet>
        </member>
        <member name="T:QbModels.SalesReceiptLineGroupAddDto">
            <SalesReceipt name="SalesReceiptLineGroupAddDto">
		<summary>
			<para>Class object for SalesReceiptLineGroupAdd.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineGroupAdd.</para>
				<code>
					qbRq.SalesReceiptLineGroupAdd = new();
				</code>
			</example>
		</summary>
	</SalesReceipt>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupAddDto.ItemGroup">
            <DefaultRefDto name="ItemGroupRef">
		<summary>
			<para>ItemGroup reference.</para>
			<example>
				<para>Sample code to specify ItemGroup reference.</para>
				<c>qbRq.ItemGroup = new() { FullName = { Your Quickbooks item group name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupAddDto.Quantity">
            <Decimal name="QuantityString">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>string</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupAddDto.UnitOfMeasure">
            <String name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupAddDto.InventorySite">
            <DefaultRefDto name="InventorySiteRef">
		<summary>
			<para>InventorySite reference.</para>
			<example>
				<para>Sample code to specify InventorySite reference.</para>
				<c>qbRq.InventorySite = new() { FullName = { Your Quickbooks inventory site name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupAddDto.InventorySiteLocation">
            <DefaultRefDto name="InventorySiteLocationRef">
		<summary>
			<para>InventorySiteLocation reference.</para>
			<example>
				<para>Sample code to specify InventorySiteLocation reference.</para>
				<c>qbRq.InventorySiteLocation = new() { FullName = { Your Quickbooks inventory site location name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupAddDto.DataExtRet">
            <DataExtRet name="DataExtRetDto">
		<summary>
			<para>Class object for DataExtRet.</para>
			<example>
				<para>Sample code to specify an data extension.</para>
				<c>qbRq.DataExtRet = new() { OwnerID = "{Quickbooks OwnerID}, DataExtName = "{Data ext name}" };</c>
			</example>
		</summary>
	</DataExtRet>
        </member>
        <member name="T:QbModels.SalesReceiptLineGroupModDto">
            <SalesReceipt name="SalesReceiptLineGroupModDto">
		<summary>
			<para>Class object for SalesReceiptLineGroupMod.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineGroupMod.</para>
				<code>
					qbRq.SalesReceiptLineGroupMod = new();
				</code>
			</example>
		</summary>
	</SalesReceipt>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupModDto.TxnLineID">
            <TxnLineID name="TxnLineID">
		<summary>
			<para>TxnLineID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnLineID";</c>
			</example>
		</summary>
		<value>
			string of TxnLineID
		</value>
	</TxnLineID>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupModDto.ItemGroup">
            <DefaultRefDto name="ItemGroupRef">
		<summary>
			<para>ItemGroup reference.</para>
			<example>
				<para>Sample code to specify ItemGroup reference.</para>
				<c>qbRq.ItemGroup = new() { FullName = { Your Quickbooks item group name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupModDto.Quantity">
            <Decimal name="QuantityString">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>string</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupModDto.UnitOfMeasure">
            <String name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupModDto.OverrideUOMSet">
            <DefaultRefDto name="OverrideUOMSetRef">
		<summary>
			<para>Override UOM set reference.</para>
			<example>
				<para>Sample code to specify override UOM set reference.</para>
				<c>qbRq.OverrideUOMSet = new() { FullName = { Your Quickbooks override UOM set name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineGroupModDto.SalesReceiptLine">
            <SalesReceipt name="SalesReceiptLineModDto">
		<summary>
			<para>Class object for SalesReceiptLineMod.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineMod.</para>
				<code>
					qbRq.SalesReceiptLineMod = new();
					qbRq.SalesReceiptLineMod.Add( new() { ListID = "{Quickbooks ListID}" });
				</code>
			</example>
		</summary>
	</SalesReceipt>
        </member>
        <member name="T:QbModels.SalesReceiptLineModDto">
            <SalesReceipt name="SalesReceiptLineModDto">
		<summary>
			<para>Class object for SalesReceiptLineMod.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineMod.</para>
				<code>
					qbRq.SalesReceiptLineMod = new();
					qbRq.SalesReceiptLineMod.Add( new() { ListID = "{Quickbooks ListID}" });
				</code>
			</example>
		</summary>
	</SalesReceipt>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.TxnLineID">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/TxnLineId[@name=&quot;TxnLineID&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.Item">
            <DefaultRefDto name="ItemRef">
		<summary>
			<para>Item reference.</para>
			<example>
				<para>Sample code to specify Item reference.</para>
				<c>qbRq.Item = new() { FullName = { Your Quickbooks item name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.Quantity">
            <Decimal name="Quantity">
		<summary>
			Gets or sets the Quantity property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.UnitOfMeasure">
            <String name="UnitOfMeasure">
		<summary>
			Gets or sets the UnitOfMeasure property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.OverrideUOMSet">
            <DefaultRefDto name="OverrideUOMSetRef">
		<summary>
			<para>Override UOM set reference.</para>
			<example>
				<para>Sample code to specify override UOM set reference.</para>
				<c>qbRq.OverrideUOMSet = new() { FullName = { Your Quickbooks override UOM set name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.Rate">
            <Decimal name="Rate">
		<summary>
			Gets or sets the Rate property.
		</summary>
		<value>decimal</value>
	</Decimal>
            <remarks><b>Note: </b>Cannot be combined with RatePercent or PriceLevel</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.RatePercent">
            <String name="RatePercent">
		<summary>
			Gets or sets the RatePercent.
		</summary>
		<value>string</value>
	</String>
            <remarks><b>Note: </b>Cannot be combined with Rate or PriceLevel</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.PriceLevel">
            <remarks><b>Note: </b>Cannot be combined with Rate or RatePercent</remarks>
            <DefaultRefDto name="PriceLevelRef">
		<summary>
			<para>Prefill account reference.</para>
			<example>
				<para>Sample code to specify price level reference.</para>
				<c>qbRq.PriceLevel = new() { FullName = { Your Quickbooks price level name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.OptionForPriceRuleConflict">
            <RegEx name="OptionForPriceRuleConflict">
		<summary>
			<para>
				Gets or sets the option for price rule conflict.
				OptionForPriceRuleConflict needs to be one of:
				<code>
					Zero
					BasePrice
				</code>
			</para>
		</summary>
		<value>The paid status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.InventorySite">
            <DefaultRefDto name="InventorySiteRef">
		<summary>
			<para>InventorySite reference.</para>
			<example>
				<para>Sample code to specify InventorySite reference.</para>
				<c>qbRq.InventorySite = new() { FullName = { Your Quickbooks inventory site name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.InventorySiteLocation">
            <DefaultRefDto name="InventorySiteLocationRef">
		<summary>
			<para>InventorySiteLocation reference.</para>
			<example>
				<para>Sample code to specify InventorySiteLocation reference.</para>
				<c>qbRq.InventorySiteLocation = new() { FullName = { Your Quickbooks inventory site location name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.SerialNumber">
            <String name="SerialNumber">
		<summary>
			Gets or sets the SerialNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with LotNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.LotNumber">
            <String name="LotNumber">
		<summary>
			Gets or sets the LotNumber property.
			<remarks>
				<b>Note: </b>Cannot be combined with SerialNumber
			</remarks>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.ServiceDate">
            <Date name="ServiceDate">
		<summary>
			Gets or sets the ServiceDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.ServiceDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.SalesTaxCode">
            <DefaultRefDto name="SalesTaxCodeRef">
		<summary>
			<para>Sales tax code reference.</para>
			<example>
				<para>Sample code to specify sales tax code reference.</para>
				<c>qbRq.SalesTaxCode = new() { FullName = { Your Quickbooks sales tax code } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.OverrideItemAccount">
            <DefaultRefDto name="OverrideItemAccountRef">
		<summary>
			<para>Override item account reference.</para>
			<example>
				<para>Sample code to specify override item account reference.</para>
				<c>qbRq.OverrideItemAccount = new() { FullName = { Your Quickbooks override item account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.Other1">
            <String name="Other1">
		<summary>
			Gets or sets the Other1 property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptLineModDto.Other2">
            <String name="Other2">
		<summary>
			Gets or sets the Other2 property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="T:QbModels.AccountAddRq">
            <summary>AccountAddRq Model</summary>
        </member>
        <member name="M:QbModels.AccountAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.AccountAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.AccountAddRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required.</remarks>
        </member>
        <member name="P:QbModels.AccountAddRq.IsActive">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/IsActive" />
        </member>
        <member name="P:QbModels.AccountAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.AccountAddRq.Parent">
            <DefaultRefDto name="ParentRef">
		<summary>
			<para>Quickbooks Parent reference.</para>
			<example>
				<para>Sample code to specify parent reference.</para>
				<c>qbRq.Parent = new() { FullName = { Your Quickbooks parent name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.AccountAddRq.AccountType">
            <RegEx name="AccountType">
		<summary>
			<para>
				Gets or sets the account type filter.
				Must be one of:
			</para>
			<code>
				AccountsPayable
				AccountsReceivable
				Bank
				CostOfGoodsSold
				CreditCard
				Equity
				Expense
				FixedAsset
				Income
				LongTermLiability
				NonPosting
				OtherAsset
				OtherCurrentAsset
				OtherCurrentLiability
				OtherExpense
				OtherIncome
			</code>
		</summary>
		<value>The account type to filter for.</value>
	</RegEx>
            <remarks><b>Note: </b>AccountType is required.</remarks>
        </member>
        <member name="P:QbModels.AccountAddRq.AccountNumber">
            <String name="AccountNumber">
		<summary>
			Gets or sets the AccountNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.AccountAddRq.BankNumber">
            <String name="BankNumber">
		<summary>
			Gets or sets the BankNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.AccountAddRq.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.AccountAddRq.OpenBalance">
            <Balance name="OpenBalance">
		<summary>
			Gets or sets the OpenBalance property.
		</summary>
		<value>decimal</value>
	</Balance>
        </member>
        <member name="P:QbModels.AccountAddRq.OpenBalanceOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.AccountAddRq.OpenBalanceDate">
            <Balance name="OpenBalanceDate">
		<summary>
			Gets or sets the OpenBalanceDate property.
		</summary>
		<value>DateTime</value>
	</Balance>
        </member>
        <member name="P:QbModels.AccountAddRq.OpenBalanceDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.AccountAddRq.TaxLineID">
            <TaxLineFilter name="TaxLineID">
		<summary>Gets or sets TaxLineID property.</summary>
		<value>DateTime</value>
	</TaxLineFilter>
        </member>
        <member name="P:QbModels.AccountAddRq.CurrencyRef">
            <DefaultRefDto name="CurrencyFilterDto">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify currency filter.</para>
				<c>qbRq.CurrencyFilter = new() { FullName = { Your Quickbooks account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="M:QbModels.AccountAddRq.ToString">
            <summary>Converts AccountAddRq to QBXML.</summary>
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="P:QbModels.AccountModRq.AccountType">
            <summary>
                <para>
                    Gets or sets the account type filter.
                    Must be one of:
                </para>
                <code>
                    AccountsPayable
                    AccountsReceivable
                    Bank
                    CostOfGoodsSold
                    CreditCard
                    Equity
                    Expense
                    FixedAsset
                    Income
                    LongTermLiability
                    NonPosting
                    OtherAsset
                    OtherCurrentAsset
                    OtherCurrentLiability
                    OtherExpense
                    OtherIncome
                </code>
            </summary>
            <value>The account type to filter for.</value>
        </member>
        <member name="M:QbModels.AccountModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="P:QbModels.AccountQueryRq.AccountType">
            <summary>
                <para>
                    Gets or sets the account type filter.
                    Must be one of:
                </para>
                <code>
                    AccountsPayable
                    AccountsReceivable
                    Bank
                    CostOfGoodsSold
                    CreditCard
                    Equity
                    Expense
                    FixedAsset
                    Income
                    LongTermLiability
                    NonPosting
                    OtherAsset
                    OtherCurrentAsset
                    OtherCurrentLiability
                    OtherExpense
                    OtherIncome
                </code>
            </summary>
            <value>The account type to filter for.</value>
        </member>
        <member name="M:QbModels.AccountQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.AccountTaxLineInfoQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.AddRqModel`1">
            <summary>Base model for generating Quickbooks AddRq QBXML</summary>
            <typeparam name="T">Quickbooks object type used for AddRq</typeparam>
        </member>
        <member name="M:QbModels.AddRqModel`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.AddRqModel`1" /> class.</summary>
        </member>
        <member name="M:QbModels.AddRqModel`1.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.AddRqModel`1" /> class.</summary>
            <param name="xmlRoot">The XML root.</param>
        </member>
        <member name="P:QbModels.AddRqModel`1.AddRq">
            <summary>Gets or sets the add rq.</summary>
            <value>The add rq.</value>
        </member>
        <member name="M:QbModels.AddRqModel`1.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.BaseListQueryRq">
            <summary>Base class for list base QueryRq</summary>
        </member>
        <member name="M:QbModels.BaseListQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.BaseListQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.BaseListQueryRq.ListID">
            <ListID name="ListIDList">
		<summary>
			<para>ListID to query for.</para>
			<example>
				Example initialization of List for ListID:
				<c>qbRq.ListID = new() { "Quickbooks.ListID" };</c>
			</example>
		</summary>
		<value>
			List of ListID
		</value>
	</ListID>
            <remarks><b>Note: </b>Cannot be combined with FullName</remarks>
        </member>
        <member name="P:QbModels.BaseListQueryRq.FullName">
            <FullName>
		<summary>
			Gets or sets the FullName property.
		</summary>
		<value>string</value>
	</FullName>
            <remarks><b>Note: </b>Cannot be combined with ListID</remarks>
        </member>
        <member name="P:QbModels.BaseListQueryRq.MaxReturned">
            <MaxReturned>
		<summary>
			Gets or sets the maximum number of items to return in a query request.
		</summary>
		<value>int</value>
	</MaxReturned>
        </member>
        <member name="P:QbModels.BaseListQueryRq.MaxReturnedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.BaseListQueryRq.ActiveStatus">
            <String name="ActiveStatus">
		<summary>
			Gets or sets the active status to return in a query request.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.BaseListQueryRq.FromModifiedDate">
            <Date name="FromModifiedDate">
		<summary>
			Gets or sets the FromModifiedDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.BaseListQueryRq.FromModifiedDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.BaseListQueryRq.ToModifiedDate">
            <Date name="ToModifiedDate">
		<summary>
			Gets or sets the ToModifiedDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.BaseListQueryRq.ToModifiedDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.BaseListQueryRq.NameFilter">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/NameRangeFilter[@name=&quot;NameFilterDto&quot;]" />
            <remarks><para><b>Note: </b>Cannot be combined with <c>NameRangeFilter</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseListQueryRq.NameRangeFilter">
            <NameRangeFilter name="NameRangeFilterDto">
		<summary>
			<para>Name range filter for lists.</para>
			<example>
				<para>Sample code to specify a list name range from A to ZZ.</para>
				<c>qbRq.NameRangeFilter = new() { FromName = "A", ToName = "ZZ" };</c>
			</example>
		</summary>
	</NameRangeFilter>
            <remarks><para><b>Note: </b>Cannot be combined with <c>NameFilter</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseListQueryRq.CurrencyFilter">
            <DefaultRefDto name="CurrencyFilterDto">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify currency filter.</para>
				<c>qbRq.CurrencyFilter = new() { FullName = { Your Quickbooks account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.BaseListQueryRq.IncludeRetElement">
            <summary>Gets or sets the include ret element.</summary>
            <value>The include ret element.</value>
        </member>
        <member name="P:QbModels.BaseListQueryRq.OwnerID">
            <summary>Gets or sets the owner identifier.</summary>
            <value>The owner identifier.</value>
        </member>
        <member name="M:QbModels.BaseListQueryRq.SearchByNameFilter(System.String,System.String)">
            <summary>Helper method to quickly setup a filter by name range</summary>
            <param name="searchFor">The name range to search from.</param>
            <param name="matchCriterion">How to search the name.  Must be one of StartsWith|Contains|EndsWith</param>
        </member>
        <member name="M:QbModels.BaseListQueryRq.SearchByNameRangeFilter(System.String,System.String)">
            <summary>Helper method to quickly setup a filter by name range</summary>
            <param name="searchFrom">The name range to search from.</param>
            <param name="searchTo">The name range to search to.</param>
        </member>
        <member name="T:QbModels.BaseTxnModRq">
            <summary>Base class for transaction based ModRq.</summary>
        </member>
        <member name="M:QbModels.BaseTxnModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.BaseTxnModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.BaseTxnModRq.TxnID">
            <TxnID name="TxnID">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnID";</c>
			</example>
		</summary>
		<value>
			string of TxnID
		</value>
	</TxnID>
            <remarks><b>Note: </b>TxnID is required</remarks>
        </member>
        <member name="P:QbModels.BaseTxnModRq.EditSequence">
            <EditSequence>
		<summary>
			Gets or sets the EditSequence.
		</summary>
		<value>string</value>
	</EditSequence>
            <remarks><b>Note: </b>EditSequence is required</remarks>
        </member>
        <member name="P:QbModels.BaseTxnModRq.TxnDate">
            <Date name="TxnDate">
		<summary>
			Gets or sets the TxnDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.BaseTxnModRq.TxnDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.BaseTxnModRq.TxnDateSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.BaseTxnModRq.RefNumber">
            <String name="RefNumber">
		<summary>
			Gets or sets the RefNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="T:QbModels.BaseTxnQueryRq">
            <summary>Base class for transaction based QueryRq.</summary>
        </member>
        <member name="M:QbModels.BaseTxnQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.BaseTxnQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.TxnID">
            <TxnID name="TxnIDList">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				Example initialization of List for TxnID:
				<c>qbRq.TxnID = new() { "Quickbooks.TxnID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnID&gt;
		</value>
	</TxnID>
            <remarks><para><b>Note: </b>Cannot be combined with <c>RefNumber</c> or <c>RefNumberCaseSensitive</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.RefNumber">
            <String name="RefNumberList">
		<summary>
			<para>RefNumber to query for.</para>
			<example>
				Example initialization of List for RefNumber:
				<c>qbRq.RefNumber = new() { "Your RefNumber" };</c>
			</example>
		</summary>
		<value>List&lt;RefNumber&gt;</value>
	</String>
            <remarks><para><b>Note: </b>Cannot be combined with <c>TxnID</c> or <c>RefNumberCaseSensitive</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.RefNumberCaseSensitive">
            <String name="RefNumberCaseSensitiveList">
		<summary>
			<para>RefNumberCaseSensitive to query for.</para>
			<example>
				Example initialization of List for RefNumber:
				<c>qbRq.RefNumberCaseSensitive = new() { "Your RefNumber" };</c>
			</example>
		</summary>
		<value>List&lt;RefNumberCaseSensitive&gt;</value>
	</String>
            <remarks><para><b>Note: </b>Cannot be combined with <c>TxnID</c> or <c>RefNumber</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.MaxReturned">
            <MaxReturned>
		<summary>
			Gets or sets the maximum number of items to return in a query request.
		</summary>
		<value>int</value>
	</MaxReturned>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.MaxReturnedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.ModifiedDateRangeFilter">
            <ModifiedDateRangeFilter name="ModifiedDateRangeFilterDto">
		<summary>
			<para>Date range filter by date modified.</para>
			<example>
				<para>Sample code to specify modified date range for 1 week.</para>
				<c>qbRq.ModifiedDateRangeFilter = new() { FromModifiedDate = DateTime.Today.AddDays(-7), ToModifiedDate = DateTime.Now };</c>
			</example>
		</summary>
	</ModifiedDateRangeFilter>
            <remarks><para><b>Note: </b>Cannot be combined with <c>TxnDateRangeFilter</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.TxnDateRangeFilter">
            <TxnDateRangeFilter name="TxnDateRangeFilterDto">
		<summary>
			<para>Date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromTxnDate = DateTime.Today.AddDays(-7), ToTxnDate = DateTime.Now };</c>
			</example>
		</summary>
	</TxnDateRangeFilter>
            <remarks><para><b>Note: </b>Cannot be combined with <c>ModifiedDateRangeFilter</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.EntityFilter">
            <EntityFilter name="EntityFilterDto">
		<summary>
			<para>Filter by Quickbooks entity.</para>
			<example>
				<para>Sample code to specify entity filter.</para>
				<c>qbRq.EntityFilter = new() { FullName = { Your Quickbooks entity name } };</c>
			</example>
		</summary>
	</EntityFilter>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.AccountFilter">
            <DefaultRefDto name="AccountFilterDto">
		<summary>
			<para>Filter by Quickbooks account.</para>
			<example>
				<para>Sample code to specify account filter.</para>
				<c>qbRq.AccountFilter = new() { FullName = { Your Quickbooks account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.RefNumberFilter">
            <RefNumberFilter name="RefNumberFilterDto">
		<summary>
			<para>RefNumber range filter for qryRq.</para>
			<example>
				<para>Sample code to specify a RefNumberFilter.</para>
				<c>qbRq.RefNumberFilter = new() { RefNumber = "123", MatchCriterion = "StartsWith" };</c>
			</example>
		</summary>
	</RefNumberFilter>
            <remarks><para><b>Note: </b>Cannot be combined with <c>RefNumberRangeFilter</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.RefNumberRangeFilter">
            <RefNumberRangeFilter name="RefNumberRangeFilterDto">
		<summary>
			<para>RefNumberRangeFilter range filter for qryRq.</para>
			<example>
				<para>Sample code to specify a RefNumberRangeFilter.</para>
				<c>qbRq.RefNumberRangeFilter = new() { FromRefNumber = "123", ToRefNumber = "999" };</c>
			</example>
		</summary>
	</RefNumberRangeFilter>
            <remarks><para><b>Note: </b>Cannot be combined with <c>RefNumberFilter</c>.</para></remarks>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.CurrencyFilter">
            <DefaultRefDto name="CurrencyFilterDto">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify currency filter.</para>
				<c>qbRq.CurrencyFilter = new() { FullName = { Your Quickbooks account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.PaidStatus">
            <RegEx name="PaidStatus">
		<summary>
			<para>
				Gets or sets the paid status.
				PaidStatus needs to be one of:
				<code>
					All
					PaidOnly
					NotPaidOnly
				</code>
			</para>
		</summary>
		<value>The paid status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.IncludeRetElement">
            <summary>Gets or sets the include ret element.</summary>
            <value>The include ret element.</value>
        </member>
        <member name="P:QbModels.BaseTxnQueryRq.OwnerID">
            <summary>Gets or sets the owner identifier.</summary>
            <value>The owner identifier.</value>
        </member>
        <member name="M:QbModels.BaseTxnQueryRq.SearchByRefNumberRange(System.String,System.String)">
            <summary>Helper method to quickly setup a filter by RefNumber range</summary>
            <param name="searchFrom">The RefNumber range to search from.</param>
            <param name="searchTo">The RefNumber range to search to.</param>
        </member>
        <member name="M:QbModels.BaseTxnQueryRq.SearchByTxnDateRange(System.DateTime,System.DateTime)">
            <summary>Helper method to quickly setup a filter by transaction dates range</summary>
            <param name="searchFrom">The transaction date to search from.</param>
            <param name="searchTo">The transaction date to search to.</param>
        </member>
        <member name="M:QbModels.BaseTxnQueryRq.SearchByModifiedDateRange(System.DateTime,System.DateTime)">
            <summary>Helper method to quickly setup a filter by transaction modified dates range</summary>
            <param name="searchFrom">The transaction modified date to search from.</param>
            <param name="searchTo">The transaction modified date to search to.</param>
        </member>
        <member name="M:QbModels.BillAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillingRateQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillToPayQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ChargeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ChargeModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ChargeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillPaymentCheckAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillPaymentCheckModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillPaymentCheckQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CheckAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CheckModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CheckQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.SalesTaxPaymentCheckAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.SalesTaxPaymentCheckModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.SalesTaxPaymentCheckQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ClassAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ClassModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ClassQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CompanyQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ARRefundCreditCardAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ARRefundCreditCardQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillPaymentCreditCardAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.BillPaymentCreditCardQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditCardChargeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditCardChargeModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditCardChargeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditCardCreditAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditCardCreditModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditCardCreditQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditMemoAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditMemoModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CreditMemoQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CurrencyAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CurrencyModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CurrencyQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CustomerAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CustomerModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CustomerMsgAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CustomerMsgQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CustomerQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CustomerTypeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.CustomerTypeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.DepositAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.DepositModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.DepositQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.EmployeeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.EmployeeModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.EmployeeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.EstimateAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.EstimateModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.EstimateQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InventoryAdjustmentAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InventoryAdjustmentModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InventoryAdjustmentQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InventorySiteAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InventorySiteModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InventorySiteQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.TransferInventoryAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.TransferInventoryModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.TransferInventoryQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InvoiceAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InvoiceModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.InvoiceQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemDiscountAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemDiscountModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemDiscountQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemFixedAssetAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemFixedAssetModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemFixedAssetQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemGroupAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemGroupModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemGroupQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemInventoryAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemInventoryModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemInventoryQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemNonInventoryAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemNonInventoryModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemNonInventoryQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemOtherChargeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemOtherChargeModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemOtherChargeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemPaymentAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemPaymentModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemPaymentQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemReceiptAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemReceiptModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemReceiptQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSalesTaxAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSalesTaxGroupAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSalesTaxGroupModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSalesTaxGroupQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSalesTaxModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSalesTaxQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemServiceAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemServiceModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemServiceQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSubtotalAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSubtotalModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ItemSubtotalQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.JobTypeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.JobTypeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.JournalEntryAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.JournalEntryModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.JournalEntryQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.LeadAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.LeadModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.LeadQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.ModRqModel`1">
            <summary>Base model for generating Quickbooks ModRq QBXML</summary>
            <typeparam name="T">Quickbooks object type used for ModRq</typeparam>
        </member>
        <member name="M:QbModels.ModRqModel`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.ModRqModel`1" /> class.</summary>
        </member>
        <member name="M:QbModels.ModRqModel`1.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.ModRqModel`1" /> class.</summary>
            <param name="xmlRoot">The XML root.</param>
        </member>
        <member name="P:QbModels.ModRqModel`1.ModRq">
            <summary>Gets or sets the mod rq.</summary>
            <value>The mod rq.</value>
        </member>
        <member name="M:QbModels.ModRqModel`1.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.OtherNameAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.OtherNameModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.OtherNameQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="P:QbModels.PaymentMethodAddRq.PaymentMethodType">
            <summary>
                Gets or sets the type of the payment method.
                Must be one of AmericanExpress|Cash|Check|DebitCard|Discover|ECheck|GiftCard|MasterCard|Other|OtherCreditCard|Visa
            </summary>
            <value>The type of the payment method.</value>
        </member>
        <member name="M:QbModels.PaymentMethodAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="P:QbModels.PaymentMethodQueryRq.PaymentMethodType">
            <summary>
                Gets or sets the type of the payment method.
                Must be one of AmericanExpress|Cash|Check|DebitCard|Discover|ECheck|GiftCard|MasterCard|Other|OtherCreditCard|Visa
            </summary>
            <value>The type of the payment method.</value>
        </member>
        <member name="M:QbModels.PaymentMethodQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ReceivePaymentAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ReceivePaymentModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.ReceivePaymentQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.PriceLevelAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.PriceLevelModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.PriceLevelQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.PurchaseOrderAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.PurchaseOrderModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.PurchaseOrderQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.QryRqModel`1">
            <summary>Base model for generating Quickbooks QueryRq QBXML</summary>
            <typeparam name="T">Quickbooks object type used for QueryRq</typeparam>
        </member>
        <member name="M:QbModels.QryRqModel`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QryRqModel`1" /> class.</summary>
        </member>
        <member name="M:QbModels.QryRqModel`1.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QryRqModel`1" /> class.</summary>
            <param name="xmlRoot">The XML root.</param>
        </member>
        <member name="P:QbModels.QryRqModel`1.QryRq">
            <summary>Gets or sets the qry rq.</summary>
            <value>The qry rq.</value>
        </member>
        <member name="M:QbModels.QryRqModel`1.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.SalesOrderAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.SalesOrderModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="M:QbModels.SalesOrderQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesReceiptAddRq">
            <summary>Add request object for SalesReceiptAddRq</summary>
        </member>
        <member name="M:QbModels.SalesReceiptAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesReceiptAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.Template">
            <DefaultRefDto name="TemplateRef">
		<summary>
			<para>Template reference.</para>
			<example>
				<para>Sample code to specify template reference.</para>
				<c>qbRq.Template = new() { FullName = { Your Quickbooks template name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.TxnDate">
            <Date name="TxnDate">
		<summary>
			Gets or sets the TxnDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.TxnDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.RefNumber">
            <String name="RefNumber">
		<summary>
			Gets or sets the RefNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.BillAddress">
            <Address name="BillAddressDto">
		<summary>
			<para>Bill address object.</para>
			<example>
				<para>Sample code to specify a Billping address object.</para>
				<c>qbRq.BillAddress = new() { Addr1 = "123 Main St", City = "MainCity", State = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.ShipAddress">
            <Address name="ShipAddressDto">
		<summary>
			<para>Ship address object.</para>
			<example>
				<para>Sample code to specify a shipping address object.</para>
				<c>qbRq.ShipAddress = new() { Addr1 = "123 Main St", City = "MainCity", State = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.IsPending">
            <Bool name="IsPending">
		<summary>
			Gets or sets the pending status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.IsPendingSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.CheckNumber">
            <String name="CheckNumber">
		<summary>
			Gets or sets the CheckNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.PaymentMethod">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;PaymentMethodRefRef&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.DueDate">
            <Date name="DueDate">
		<summary>
			Gets or sets the DueDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.DueDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.SalesRep">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;SalesRep&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.ShipDate">
            <Date name="ShipDate">
		<summary>
			Gets or sets the ShipDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.ShipDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.ShipMethod">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;ShipMethod&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.FOB">
            <String name="FOB">
		<summary>
			Gets or sets the FOB property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.ItemSalesTax">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;ItemSalesTax&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.CustomerMsg">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;CustomerMsg&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.IsToBePrinted">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Bool[@name=&quot;IsToBePrinted&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.IsToBePrintedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.IsToBeEmailed">
            <Bool name="IsToBeEmailed">
		<summary>
			Gets or sets the emailing status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.IsToBeEmailedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.CustomerSalesTaxCode">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;CustomerSalesTaxCode&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.DepositToAccount">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;DepositToAccount&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.CreditCardInfo">
            <CreditCardTxnInfo name="CreditCardTxnInfoDto">
		<summary>
			<para>Class object for CreditCardTxnInfo.</para>
			<example>
				<para>Sample code to specify a CreditCardTxnInfo.</para>
				<code>
					qbRq.CreditCardTxnInfo = new();
					qbRq.CreditCardTxnInfo.CreditCardTxnInputInfo = new();
					qbRq.CreditCardTxnInfo.CreditCardTxnResultInfo = new();
				</code>
			</example>
		</summary>
	</CreditCardTxnInfo>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.Other">
            <String name="Other">
		<summary>
			Gets or sets the Other property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.ExchangeRate">
            <Decimal name="ExchangeRateString">
		<summary>
			Gets or sets the ExchangeRate property.
		</summary>
		<value>string</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.SalesReceiptLine">
            <SalesReceipt name="SalesReceiptLineAddDto">
		<summary>
			<para>Class object for SalesReceiptLineAdd.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineAdd.</para>
				<code>
					qbRq.SalesReceiptLineAdd = new();
					qbRq.SalesReceiptLineAdd.Add( new() { FullName = "{Name of time tracking entity}" });
				</code>
			</example>
		</summary>
	</SalesReceipt>
            <remarks><b>Note: </b>Cannot be combined with SalesReceiptLineGroup</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.SalesReceiptLineGroup">
            <SalesReceipt name="SalesReceiptLineGroupAddDto">
		<summary>
			<para>Class object for SalesReceiptLineGroupAdd.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineGroupAdd.</para>
				<code>
					qbRq.SalesReceiptLineGroupAdd = new();
				</code>
			</example>
		</summary>
	</SalesReceipt>
            <remarks><b>Note: </b>Cannot be combined with SalesReceiptLine</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptAddRq.DataExtRet">
            <DataExtRet name="DataExtRetDto">
		<summary>
			<para>Class object for DataExtRet.</para>
			<example>
				<para>Sample code to specify an data extension.</para>
				<c>qbRq.DataExtRet = new() { OwnerID = "{Quickbooks OwnerID}, DataExtName = "{Data ext name}" };</c>
			</example>
		</summary>
	</DataExtRet>
        </member>
        <member name="M:QbModels.SalesReceiptAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesReceiptModRq">
            <summary>Mod request object for SalesReceiptModRq</summary>
        </member>
        <member name="M:QbModels.SalesReceiptModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesReceiptModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.Template">
            <DefaultRefDto name="TemplateRef">
		<summary>
			<para>Template reference.</para>
			<example>
				<para>Sample code to specify template reference.</para>
				<c>qbRq.Template = new() { FullName = { Your Quickbooks template name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.BillAddress">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;BillAddress&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptModRq.ShipAddress">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;ShipAddress&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptModRq.IsPending">
            <Bool name="IsPending">
		<summary>
			Gets or sets the pending status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.IsPendingSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.CheckNumber">
            <String name="CheckNumber">
		<summary>
			Gets or sets the CheckNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.PaymentMethod">
            <DefaultRefDto name="PaymentMethodRef">
		<summary>
			<para>Quickbooks PaymentMethod reference.</para>
			<example>
				<para>Sample code to specify PaymentMethod reference.</para>
				<c>qbRq.PaymentMethod = new() { FullName = { Your Quickbooks PaymentMethod name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.DueDate">
            <Date name="DueDate">
		<summary>
			Gets or sets the DueDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.DueDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.SalesRep">
            <DefaultRefDto name="SalesRepRef">
		<summary>
			<para>Sales rep reference.</para>
			<example>
				<para>Sample code to specify prefill sales rep reference.</para>
				<c>qbRq.SalesRep = new() { FullName = { Your Quickbooks sales rep name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.ShipDate">
            <Date name="ShipDate">
		<summary>
			Gets or sets the ShipDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.ShipDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.ShipMethod">
            <DefaultRefDto name="ShipMethodRef">
		<summary>
			<para>Ship method reference.</para>
			<example>
				<para>Sample code to specify ship method reference.</para>
				<c>qbRq.ShipMethod = new() { FullName = { Your Quickbooks ship method name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.FOB">
            <String name="FOB">
		<summary>
			Gets or sets the FOB property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.ItemSalesTax">
            <DefaultRefDto name="ItemSalesTaxRef">
		<summary>
			<para>Item sales tax reference.</para>
			<example>
				<para>Sample code to specify item sales tax reference.</para>
				<c>qbRq.ItemSalesTax = new() { FullName = { Your Quickbooks sales tax reference name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.CustomerMsg">
            <DefaultRefDto name="CustomerMsgRef">
		<summary>
			<para>Customer message reference.</para>
			<example>
				<para>Sample code to specify Customer message reference.</para>
				<c>qbRq.CustomerMsg = new() { FullName = { Your Quickbooks customer msg name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.IsToBePrinted">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Bool[@name=&quot;IsToBePrinted&quot;]" />
        </member>
        <member name="P:QbModels.SalesReceiptModRq.IsToBePrintedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.IsToBeEmailed">
            <Bool name="IsToBeEmailed">
		<summary>
			Gets or sets the emailing status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.IsToBeEmailedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.CustomerSalesTaxCode">
            <DefaultRefDto name="CustomerSalesTaxCodeRef">
		<summary>
			<para>Customer sales tax code reference.</para>
			<example>
				<para>Sample code to specify customer sales tax code reference.</para>
				<c>qbRq.CustomerSalesTaxCode = new() { FullName = { Your Quickbooks customer sales tax code } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.DepositToAccount">
            <DefaultRefDto name="DepositToAccountRef">
		<summary>
			<para>Deposit to account reference.</para>
			<example>
				<para>Sample code to specify deposit account reference.</para>
				<c>qbRq.DepositToAccount = new() { FullName = { Your Quickbooks account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.Other">
            <String name="Other">
		<summary>
			Gets or sets the Other property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.ExchangeRate">
            <Decimal name="ExchangeRateString">
		<summary>
			Gets or sets the ExchangeRate property.
		</summary>
		<value>string</value>
	</Decimal>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.SalesReceiptLine">
            <SalesReceipt name="SalesReceiptLineModDto">
		<summary>
			<para>Class object for SalesReceiptLineMod.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineMod.</para>
				<code>
					qbRq.SalesReceiptLineMod = new();
					qbRq.SalesReceiptLineMod.Add( new() { ListID = "{Quickbooks ListID}" });
				</code>
			</example>
		</summary>
	</SalesReceipt>
            <remarks><b>Note: </b>Cannot be combined with SalesReceiptLineGroup</remarks>
        </member>
        <member name="P:QbModels.SalesReceiptModRq.SalesReceiptLineGroup">
            <SalesReceipt name="SalesReceiptLineGroupModDto">
		<summary>
			<para>Class object for SalesReceiptLineGroupMod.</para>
			<example>
				<para>Sample code to specify a SalesReceiptLineGroupMod.</para>
				<code>
					qbRq.SalesReceiptLineGroupMod = new();
				</code>
			</example>
		</summary>
	</SalesReceipt>
            <remarks><b>Note: </b>Cannot be combined with SalesReceiptLine</remarks>
        </member>
        <member name="M:QbModels.SalesReceiptModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesReceiptQueryRq">
            <summary>Query request object for SalesReceiptQueryRq</summary>
        </member>
        <member name="M:QbModels.SalesReceiptQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesReceiptQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.SalesReceiptQueryRq.IncludeLineItems">
            <Bool name="IncludeLineItems">
		<summary>
			Gets or sets the whether query request should return line items.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesReceiptQueryRq.IncludeLineItemsSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="M:QbModels.SalesReceiptQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesRepAddRq">
            <summary>Add request object for SalesRepAddRq</summary>
        </member>
        <member name="M:QbModels.SalesRepAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesRepAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.SalesRepAddRq.Initial">
            <String name="Initial">
		<summary>
			Gets or sets the Initial property.
		</summary>
		<value>string</value>
	</String>
            <remarks><b>Note: </b>Initial is required</remarks>
        </member>
        <member name="P:QbModels.SalesRepAddRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesRepAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesRepAddRq.SalesRepEntity">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;SalesRepEntityRef&quot;]" />
            <remarks><b>Note: </b>SalesRep is required</remarks>
        </member>
        <member name="M:QbModels.SalesRepAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesRepModRq">
            <summary>Mod request object for SalesRepModRq</summary>
        </member>
        <member name="M:QbModels.SalesRepModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesRepModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.SalesRepModRq.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID>
            <remarks><b>Note: </b>ListID is required</remarks>
        </member>
        <member name="P:QbModels.SalesRepModRq.EditSequence">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/String[@name=&quot;EditSequence&quot;]" />
            <remarks><b>Note: </b>EditSequence is required</remarks>
        </member>
        <member name="P:QbModels.SalesRepModRq.Initial">
            <String name="Initial">
		<summary>
			Gets or sets the Initial property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.SalesRepModRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesRepModRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesRepModRq.SalesRepEntity">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;SalesRepEntityRef&quot;]" />
        </member>
        <member name="M:QbModels.SalesRepModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesRepQueryRq">
            <summary>Query request object for SalesRepQueryRq</summary>
        </member>
        <member name="M:QbModels.SalesRepQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesRepQueryRq" /> class.</summary>
        </member>
        <member name="M:QbModels.SalesRepQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesTaxCodeAddRq">
            <summary>Add request object for SalesTaxCodeAddRq</summary>
        </member>
        <member name="M:QbModels.SalesTaxCodeAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesTaxCodeAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.SalesTaxCodeAddRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required</remarks>
        </member>
        <member name="P:QbModels.SalesTaxCodeAddRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesTaxCodeAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesTaxCodeAddRq.IsTaxable">
            <Bool name="IsTaxable">
		<summary>
			Gets or sets the taxable status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesTaxCodeAddRq.IsTaxableSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesTaxCodeAddRq.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.SalesTaxCodeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesTaxCodeModRq">
            <summary>Mod request object SalesTaxCodeModRq</summary>
        </member>
        <member name="M:QbModels.SalesTaxCodeModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesTaxCodeModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID>
            <remarks><b>Note: </b>ListID is required</remarks>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.EditSequence">
            <EditSequence>
		<summary>
			Gets or sets the EditSequence.
		</summary>
		<value>string</value>
	</EditSequence>
            <remarks><b>Note: </b>EditSequence is required</remarks>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.IsTaxable">
            <Bool name="IsTaxable">
		<summary>
			Gets or sets the taxable status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.IsTaxableSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.SalesTaxCodeModRq.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.SalesTaxCodeModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.SalesTaxCodeQueryRq">
            <summary>Query request object for SalesTaxCodeQueryRq</summary>
        </member>
        <member name="M:QbModels.SalesTaxCodeQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.SalesTaxCodeQueryRq" /> class.</summary>
        </member>
        <member name="M:QbModels.SalesTaxCodeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.ShipMethodAddRq">
            <summary>Add request object for ShipMethodAddRq</summary>
        </member>
        <member name="M:QbModels.ShipMethodAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.ShipMethodAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.ShipMethodAddRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required</remarks>
        </member>
        <member name="P:QbModels.ShipMethodAddRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.ShipMethodAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="M:QbModels.ShipMethodAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.ShipMethodQueryRq">
            <summary>Query request object for ShipMethodQueryRq</summary>
        </member>
        <member name="M:QbModels.ShipMethodQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.ShipMethodQueryRq" /> class.</summary>
        </member>
        <member name="M:QbModels.ShipMethodQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TimeTrackingAddRq">
            <summary>Add request object for TimeTrackingAddRq</summary>
        </member>
        <member name="M:QbModels.TimeTrackingAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TimeTrackingAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.TxnDate">
            <Date name="TxnDate">
		<summary>
			Gets or sets the TxnDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.TxnDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.Entity">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;EntityRef&quot;]" />
            <remarks><b>Note: </b>Entity is required</remarks>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.ItemService">
            <DefaultRefDto name="ItemServiceRef">
		<summary>
			<para>ItemService reference.</para>
			<example>
				<para>Sample code to specify ItemService reference.</para>
				<c>qbRq.ItemService = new() { FullName = { Your Quickbooks item service name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.Duration">
            <Decimal name="Duration">
		<summary>
			Gets or sets the Duration property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.DurationOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.PayrollItemWage">
            <DefaultRefDto name="PayrollItemWageRef">
		<summary>
			<para>PayrollItemWageRef reference.</para>
			<example>
				<para>Sample code to specify PayrollItemWageRef reference.</para>
				<c>qbRq.PayrollItemWage = new() { FullName = { Your Quickbooks payroll item wage name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.Notes">
            <String name="Notes">
		<summary>
			Gets or sets the Notes property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.BillableStatus">
            <RegEx name="BillableStatus">
		<summary>
			<para>
				Gets or sets the billable status.
				BillableStatus needs to be one of:
				<code>
					Billable
					NotBillable
					HasBeenBilled
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.IsBillable">
            <Bool name="IsBillable">
		<summary>
			Gets or sets the billable status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.IsBillableSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TimeTrackingAddRq.ExternalGUID">
            <ExternalGUID>
		<summary>
			Gets or sets the ExternalGUID.
		</summary>
		<value>string</value>
	</ExternalGUID>
        </member>
        <member name="M:QbModels.TimeTrackingAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TimeTrackingModRq">
            <summary>Mod request object for TimeTrackingModRq</summary>
        </member>
        <member name="M:QbModels.TimeTrackingModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TimeTrackingModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.Entity">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[@name=&quot;EntityRef&quot;]" />
            <remarks><b>Note: </b>Entity is required</remarks>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.ItemService">
            <DefaultRefDto name="ItemServiceRef">
		<summary>
			<para>ItemService reference.</para>
			<example>
				<para>Sample code to specify ItemService reference.</para>
				<c>qbRq.ItemService = new() { FullName = { Your Quickbooks item service name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.Duration">
            <Decimal name="Duration">
		<summary>
			Gets or sets the Duration property.
		</summary>
		<value>decimal</value>
	</Decimal>
            <remarks><b>Done : </b>Duration is required</remarks>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.DurationOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.PayrollItemWage">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/DefaultRefDto[nameof= &quot;PayrollItemWageRef&quot;]" />
        </member>
        <member name="P:QbModels.TimeTrackingModRq.Notes">
            <String name="Notes">
		<summary>
			Gets or sets the Notes property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.TimeTrackingModRq.BillableStatus">
            <RegEx name="BillableStatus">
		<summary>
			<para>
				Gets or sets the billable status.
				BillableStatus needs to be one of:
				<code>
					Billable
					NotBillable
					HasBeenBilled
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="M:QbModels.TimeTrackingModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TimeTrackingQueryRq">
            <summary>Query request object TimeTrackingQueryRq</summary>
        </member>
        <member name="M:QbModels.TimeTrackingQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TimeTrackingQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TimeTrackingQueryRq.TxnID">
            <TxnID name="TxnIDList">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				Example initialization of List for TxnID:
				<c>qbRq.TxnID = new() { "Quickbooks.TxnID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnID&gt;
		</value>
	</TxnID>
        </member>
        <member name="P:QbModels.TimeTrackingQueryRq.MaxReturned">
            <MaxReturned>
		<summary>
			Gets or sets the maximum number of items to return in a query request.
		</summary>
		<value>int</value>
	</MaxReturned>
        </member>
        <member name="P:QbModels.TimeTrackingQueryRq.MaxReturnedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TimeTrackingQueryRq.ModifiedDateRangeFilter">
            <ModifiedDateRangeFilter name="ModifiedDateRangeFilterDto">
		<summary>
			<para>Date range filter by date modified.</para>
			<example>
				<para>Sample code to specify modified date range for 1 week.</para>
				<c>qbRq.ModifiedDateRangeFilter = new() { FromModifiedDate = DateTime.Today.AddDays(-7), ToModifiedDate = DateTime.Now };</c>
			</example>
		</summary>
	</ModifiedDateRangeFilter>
        </member>
        <member name="P:QbModels.TimeTrackingQueryRq.TxnDateRangeFilter">
            <TxnDateRangeFilter name="TxnDateRangeFilterDto">
		<summary>
			<para>Date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromTxnDate = DateTime.Today.AddDays(-7), ToTxnDate = DateTime.Now };</c>
			</example>
		</summary>
	</TxnDateRangeFilter>
        </member>
        <member name="P:QbModels.TimeTrackingQueryRq.TimeTrackingEntityFilter">
            <TimeTrackingEntityFilter name="TimeTrackingEntityFilterDto">
		<summary>
			<para>Class object for TimeTrackingEntityFilter.</para>
			<example>
				<para>Sample code to specify a TimeTrackingEntityFilter.</para>
				<c>qbRq.TimeTrackingEntityFilter = new() { FullName = "{Name of time tracking entity}" };</c>
			</example>
		</summary>
	</TimeTrackingEntityFilter>
        </member>
        <member name="P:QbModels.TimeTrackingQueryRq.IncludeRetElement">
            <String name="IncludeRetElement">
		<summary>
			Gets or sets the IncludeRetElement property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.TimeTrackingQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.ToDoAddRq">
            <summary>Add request object for ToDoAddRq</summary>
        </member>
        <member name="M:QbModels.ToDoAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.ToDoAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.ToDoAddRq.Notes">
            <String name="Notes">
		<summary>
			Gets or sets the Notes property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ToDoAddRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.ToDoAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ToDoAddRq.Type">
            <RegEx name="ToDoType">
		<summary>
			ToDo type .
			Must be one of:
			<code>
				Task
				Call
				Fax
				Email
				Meeting
				Appointment
			</code>
		</summary>
		<value>string</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ToDoAddRq.Priority">
            <RegEx name="Priority">
		<summary>
			<para>
				Gets or sets the priority.
				Priority needs to be one of:
				<code>
					Low
					Medium
					High
				</code>
			</para>
		</summary>
		<value>The paid status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ToDoAddRq.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Employee or Lead or Vendor</remarks>
        </member>
        <member name="P:QbModels.ToDoAddRq.Employee">
            <DefaultRefDto name="EmployeeRef">
		<summary>
			<para>Employee reference.</para>
			<example>
				<para>Sample code to specify Employee reference.</para>
				<c>qbRq.Employee = new() { FullName = { Your Quickbooks employee name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Customer or Lead or Vendor</remarks>
        </member>
        <member name="P:QbModels.ToDoAddRq.Lead">
            <DefaultRefDto name="LeadRef">
		<summary>
			<para>Lead reference.</para>
			<example>
				<para>Sample code to specify Lead reference.</para>
				<c>qbRq.Lead = new() { FullName = { Your Quickbooks lead name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Employee or Customer or Vendor</remarks>
        </member>
        <member name="P:QbModels.ToDoAddRq.Vendor">
            <DefaultRefDto name="VendorRef">
		<summary>
			<para>Vendor reference.</para>
			<example>
				<para>Sample code to specify vendor reference.</para>
				<c>qbRq.Vendor = new() { FullName = { Your Quickbooks vendor name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Employee or Customer or Lead</remarks>
        </member>
        <member name="P:QbModels.ToDoAddRq.IsDone">
            <Bool name="IsDone">
		<summary>
			Gets or sets the completion status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.ToDoAddRq.IsDoneSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ToDoAddRq.ReminderDate">
            <Date name="ReminderDate">
		<summary>
			Gets or sets the ReminderDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.ToDoAddRq.ReminderDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ToDoAddRq.ReminderTime">
            <String name="ReminderTime">
		<summary>
			<para>ReminderTime property.</para>
			<example>
				Example initialization of List for ReminderTime:
				<c>qbRq.ReminderTime = "{Reminder Time}";</c>
			</example>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.ToDoAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.ToDoModRq">
            <summary>Mod request object for ToDoModRq</summary>
        </member>
        <member name="M:QbModels.ToDoModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.ToDoModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.ToDoModRq.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID>
        </member>
        <member name="P:QbModels.ToDoModRq.EditSequence">
            <EditSequence>
		<summary>
			Gets or sets the EditSequence.
		</summary>
		<value>string</value>
	</EditSequence>
        </member>
        <member name="P:QbModels.ToDoModRq.Notes">
            <String name="Notes">
		<summary>
			Gets or sets the Notes property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.ToDoModRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.ToDoModRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ToDoModRq.Type">
            <RegEx name="ToDoType">
		<summary>
			ToDo type .
			Must be one of:
			<code>
				Task
				Call
				Fax
				Email
				Meeting
				Appointment
			</code>
		</summary>
		<value>string</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ToDoModRq.Priority">
            <RegEx name="Priority">
		<summary>
			<para>
				Gets or sets the priority.
				Priority needs to be one of:
				<code>
					Low
					Medium
					High
				</code>
			</para>
		</summary>
		<value>The paid status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.ToDoModRq.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Employee or Lead or Vendor</remarks>
        </member>
        <member name="P:QbModels.ToDoModRq.Employee">
            <DefaultRefDto name="EmployeeRef">
		<summary>
			<para>Employee reference.</para>
			<example>
				<para>Sample code to specify Employee reference.</para>
				<c>qbRq.Employee = new() { FullName = { Your Quickbooks employee name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Customer or Lead or Vendor</remarks>
        </member>
        <member name="P:QbModels.ToDoModRq.Lead">
            <DefaultRefDto name="LeadRef">
		<summary>
			<para>Lead reference.</para>
			<example>
				<para>Sample code to specify Lead reference.</para>
				<c>qbRq.Lead = new() { FullName = { Your Quickbooks lead name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Customer or Employee or Vendor</remarks>
        </member>
        <member name="P:QbModels.ToDoModRq.Vendor">
            <DefaultRefDto name="VendorRef">
		<summary>
			<para>Vendor reference.</para>
			<example>
				<para>Sample code to specify vendor reference.</para>
				<c>qbRq.Vendor = new() { FullName = { Your Quickbooks vendor name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Done: </b>Cannot be combined with Customer or Employee or Lead</remarks>
        </member>
        <member name="P:QbModels.ToDoModRq.IsDone">
            <Bool name="IsDone">
		<summary>
			Gets or sets the completion status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.ToDoModRq.IsDoneSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ToDoModRq.ReminderDate">
            <Date name="ReminderDate">
		<summary>
			Gets or sets the ReminderDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.ToDoModRq.ReminderDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.ToDoModRq.ReminderTime">
            <String name="ReminderTime">
		<summary>
			<para>ReminderTime property.</para>
			<example>
				Example initialization of List for ReminderTime:
				<c>qbRq.ReminderTime = "{Reminder Time}";</c>
			</example>
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.ToDoModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.ToDoQueryRq">
            <summary>Query request object for ToDoQueryRq</summary>
        </member>
        <member name="M:QbModels.ToDoQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.ToDoQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.ToDoQueryRq.DoneStatus">
            <RegEx name="DoneStatus">
		<summary>
			<para>
				Gets or sets the done status.
				DoneStatus needs to be one of:
				<code>
					NotDoneOnly
					DoneOnly
					All
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="M:QbModels.ToDoQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TransactionQueryRq">
            <summary>Query request object for TransactionQueryRq</summary>
        </member>
        <member name="M:QbModels.TransactionQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TransactionQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TxnID">
            <TxnID name="TxnIDList">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				Example initialization of List for TxnID:
				<c>qbRq.TxnID = new() { "Quickbooks.TxnID" };</c>
			</example>
		</summary>
		<value>
			List&lt;TxnID&gt;
		</value>
	</TxnID>
            <remarks><b>Note: </b>TxnID cannot be combined with RefNumber or RefNumberCaseSensitive</remarks>
        </member>
        <member name="P:QbModels.TransactionQueryRq.MaxReturned">
            <MaxReturned>
		<summary>
			Gets or sets the maximum number of items to return in a query request.
		</summary>
		<value>int</value>
	</MaxReturned>
        </member>
        <member name="P:QbModels.TransactionQueryRq.MaxReturnedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TransactionQueryRq.RefNumber">
            <remarks><b>Note: </b>RefNumber cannot be combined with TxnID or RefNumberCaseSensitive</remarks>
        </member>
        <member name="P:QbModels.TransactionQueryRq.RefNumberCaseSensitive">
            <remarks><b>Note: </b>RefNumberCaseSensitive cannot be combined with TxnID or RefNumber</remarks>
        </member>
        <member name="P:QbModels.TransactionQueryRq.RefNumberFilter">
            <RefNumberFilter name="RefNumberFilterDto">
		<summary>
			<para>RefNumber range filter for qryRq.</para>
			<example>
				<para>Sample code to specify a RefNumberFilter.</para>
				<c>qbRq.RefNumberFilter = new() { RefNumber = "123", MatchCriterion = "StartsWith" };</c>
			</example>
		</summary>
	</RefNumberFilter>
            <remarks><b>Note: </b>Cannot be combined with RefNumberRangeFilter</remarks>
        </member>
        <member name="P:QbModels.TransactionQueryRq.RefNumberRangeFilter">
            <RefNumberRangeFilter name="RefNumberRangeFilterDto">
		<summary>
			<para>RefNumberRangeFilter range filter for qryRq.</para>
			<example>
				<para>Sample code to specify a RefNumberRangeFilter.</para>
				<c>qbRq.RefNumberRangeFilter = new() { FromRefNumber = "123", ToRefNumber = "999" };</c>
			</example>
		</summary>
	</RefNumberRangeFilter>
            <remarks><b>Note: </b>Cannot be combined with RefNumberFilter</remarks>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TxnModifiedDateRangeFilter">
            <ModifiedDateRangeFilter name="ModifiedDateRangeFilterDto">
		<summary>
			<para>Date range filter by date modified.</para>
			<example>
				<para>Sample code to specify modified date range for 1 week.</para>
				<c>qbRq.ModifiedDateRangeFilter = new() { FromModifiedDate = DateTime.Today.AddDays(-7), ToModifiedDate = DateTime.Now };</c>
			</example>
		</summary>
	</ModifiedDateRangeFilter>
            <remarks><b>Note: </b>Cannot be combined with TxnDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TxnDateRangeFilter">
            <TxnDateRangeFilter name="TxnDateRangeFilterDto">
		<summary>
			<para>Date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromTxnDate = DateTime.Today.AddDays(-7), ToTxnDate = DateTime.Now };</c>
			</example>
		</summary>
	</TxnDateRangeFilter>
            <remarks><b>Note: </b>Cannot be combined with TxnModifiedDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TransactionEntityFilter">
            <TransactionFilter name="TransactionEntityFilterDto">
		<summary>
			<para>Transaction entity range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction entity reference number.</para>
				<c>qbRq.TransactionEntityFilter = new() { FullName = "{Quickbooks item name}" };</c>
			</example>
		</summary>
	</TransactionFilter>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TransactionAccountFilter">
            <TransactionFilter name="TransactionAccountFilterDto">
		<summary>
			<para>Transaction account range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction account reference number.</para>
				<c>qbRq.TransactionAccountFilter = new() { FullName = "{Quickbooks item name}" };</c>
			</example>
		</summary>
	</TransactionFilter>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TransactionItemFilter">
            <TransactionFilter name="TransactionItemFilterDto">
		<summary>
			<para>Transaction item range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction item reference number.</para>
				<c>qbRq.TransactionItemFilter = new() { FullName = "{Quickbooks item name}" };</c>
			</example>
		</summary>
	</TransactionFilter>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TransactionDetailLevelFilter">
            <RegEx name="TransactionDetailLevel">
		<summary>
			<para>
				Gets or sets the TransactionDetailLevel.
				TransactionDetailLevel needs to be one of:
				<code>
					All
					SummaryOnly
					AllExceptSummary
				</code>
			</para>
		</summary>
		<value>The transaction detail level.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TransactionPostingStatusFilter">
            <RegEx name="TransactionPostingStatus">
		<summary>
			<para>
				Gets or sets the TransactionPostingStatus.
				TransactionPostingStatus needs to be one of:
				<code>
					Either
					NonPosting
					Posting
				</code>
			</para>
		</summary>
		<value>The transaction posting status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.TransactionQueryRq.TransactionPaidStatusFilter">
            <RegEx name="TransactionPaidStatus">
		<summary>
			<para>
				Gets or sets the transaction paid status.
				TransactionPaidStatus needs to be one of:
				<code>
					Either
					Closed
					Open
				</code>
			</para>
		</summary>
		<value>The transaction paid status.</value>
	</RegEx>
        </member>
        <member name="P:QbModels.TransactionQueryRq.CurrencyFilter">
            <DefaultRefDto name="CurrencyRef">
		<summary>
			<para>Currency reference.</para>
			<example>
				<para>Sample code to specify currency reference.</para>
				<c>qbRq.Currency = new() { FullName = { Your Quickbooks currency name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="M:QbModels.TransactionQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TxnDeletedQueryRq">
            <summary>Query request object for TxnDeletedQueryRq</summary>
        </member>
        <member name="M:QbModels.TxnDeletedQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TxnDeletedQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TxnDeletedQueryRq.TxnDelType">
            <RegEx name="TxnDelType">
		<summary>
			<para>
				Gets or sets the transaction delete type.
				Must be one of:
			</para>
			<code>
				ARRefundCreditCard
				Bill
				BillPaymentCheck
				BillPaymentCreditCard
				BuildAssembly
				Charge
				Check
				CreditCardCharge
				CreditCardCredit
				CreditMemo
				Deposit
				Estimate
				InventoryAdjustment
				Invoice
				ItemReceipt
				JournalEntry
				PayrollLiabilityAdjustment
				PayrollPriorPayment
				PayrollYearToDateAdjustment
				PurchaseOrder
				ReceivePayment
				SalesOrder
				SalesReceipt
				SalesTaxPaymentCheck
				TimeTracking
				TransferInventory
				VehicleMileage
				VendorCredit
			</code>
		</summary>
		<value>The transaction delete type.</value>
	</RegEx>
            <remarks><b>Note: </b>TxnDelType is required</remarks>
        </member>
        <member name="P:QbModels.TxnDeletedQueryRq.DeletedDateRangeFilter">
            <DeletedDateRangeFilter name="DeletedDateRangeFilterDto">
		<summary>
			<para>Deleted date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromDeletedDate = DateTime.Today.AddDays(-7), ToDeletedDate = DateTime.Now };</c>
			</example>
		</summary>
	</DeletedDateRangeFilter>
        </member>
        <member name="M:QbModels.TxnDeletedQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TxnDelRq">
            <summary>Request object for TxnDelRq</summary>
        </member>
        <member name="M:QbModels.TxnDelRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TxnDelRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TxnDelRq.TxnDelType">
            <RegEx name="TxnDelType">
		<summary>
			<para>
				Gets or sets the transaction delete type.
				Must be one of:
			</para>
			<code>
				ARRefundCreditCard
				Bill
				BillPaymentCheck
				BillPaymentCreditCard
				BuildAssembly
				Charge
				Check
				CreditCardCharge
				CreditCardCredit
				CreditMemo
				Deposit
				Estimate
				InventoryAdjustment
				Invoice
				ItemReceipt
				JournalEntry
				PayrollLiabilityAdjustment
				PayrollPriorPayment
				PayrollYearToDateAdjustment
				PurchaseOrder
				ReceivePayment
				SalesOrder
				SalesReceipt
				SalesTaxPaymentCheck
				TimeTracking
				TransferInventory
				VehicleMileage
				VendorCredit
			</code>
		</summary>
		<value>The transaction delete type.</value>
	</RegEx>
            <remarks><b>Note: </b>TxnDelType is required</remarks>
        </member>
        <member name="P:QbModels.TxnDelRq.TxnID">
            <TxnID name="TxnID">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnID";</c>
			</example>
		</summary>
		<value>
			string of TxnID
		</value>
	</TxnID>
        </member>
        <member name="M:QbModels.TxnDelRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TxnVoidRq">
            <summary>Request object for TxnVoidRq</summary>
        </member>
        <member name="M:QbModels.TxnVoidRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TxnVoidRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TxnVoidRq.TxnVoidType">
            <RegEx name="TxnVoidType">
		<summary>
			<para>
				Gets or sets the transaction void type.
				Must be one of:
			</para>
			<code>
				ARRefundCreditCard
				Bill
				BillPaymentCheck
				BillPaymentCreditCard
				Charge
				Check
				CreditCardCharge
				CreditCardCredit
				CreditMemo
				Deposit
				InventoryAdjustment
				Invoice
				ItemReceipt
				JournalEntry
				SalesReceipt
				VendorCredit
			</code>
		</summary>
		<value>The transaction void type.</value>
	</RegEx>
            <remarks><b>Note: </b>TxnVoidType is required</remarks>
        </member>
        <member name="P:QbModels.TxnVoidRq.TxnID">
            <TxnID name="TxnID">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnID";</c>
			</example>
		</summary>
		<value>
			string of TxnID
		</value>
	</TxnID>
            <remarks><b>Note: </b>TxnID is required</remarks>
        </member>
        <member name="M:QbModels.TxnVoidRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TransferAddRq">
            <summary>Add request object for TransferAddRq</summary>
        </member>
        <member name="M:QbModels.TransferAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TransferAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TransferAddRq.TxnDate">
            <Date name="TxnDate">
		<summary>
			Gets or sets the TxnDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.TransferAddRq.TxnDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TransferAddRq.TransferFromAccount">
            <DefaultRefDto name="TransferFromAccountRef">
		<summary>
			<para>TransferFromAccount reference.</para>
			<example>
				<para>Sample code to specify transfer from account reference.</para>
				<c>qbRq.TransferFromAccount = new() { FullName = { Your Quickbooks transfer from account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TransferAddRq.TransferToAccount">
            <DefaultRefDto name="TransferToAccountRef">
		<summary>
			<para>TransferToAccount reference.</para>
			<example>
				<para>Sample code to specify transfer to account reference.</para>
				<c>qbRq.TransferToAccount = new() { FullName = { Your Quickbooks transfer to account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TransferAddRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TransferAddRq.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.TransferAddRq.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TransferAddRq.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.TransferAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TransferModRq">
            <summary>Mod request object for TransferModRq</summary>
        </member>
        <member name="M:QbModels.TransferModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TransferModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TransferModRq.TransferFromAccount">
            <DefaultRefDto name="TransferFromAccountRef">
		<summary>
			<para>TransferFromAccount reference.</para>
			<example>
				<para>Sample code to specify transfer from account reference.</para>
				<c>qbRq.TransferFromAccount = new() { FullName = { Your Quickbooks transfer from account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TransferModRq.TransferToAccount">
            <DefaultRefDto name="TransferToAccountRef">
		<summary>
			<para>TransferToAccount reference.</para>
			<example>
				<para>Sample code to specify transfer to account reference.</para>
				<c>qbRq.TransferToAccount = new() { FullName = { Your Quickbooks transfer to account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TransferModRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.TransferModRq.Amount">
            <Decimal name="Amount">
		<summary>
			Gets or sets the Amount property.
		</summary>
		<value>decimal</value>
	</Decimal>
        </member>
        <member name="P:QbModels.TransferModRq.AmountOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TransferModRq.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.TransferModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.TransferQueryRq">
            <summary>Query request object for TransferQueryRq</summary>
        </member>
        <member name="M:QbModels.TransferQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.TransferQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.TransferQueryRq.TxnID">
            <TxnID name="TxnID">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnID";</c>
			</example>
		</summary>
		<value>
			string of TxnID
		</value>
	</TxnID>
            <remarks><b>Note: </b>Cannot be combined with ModifiedDateRangefilter or TxnDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.TransferQueryRq.MaxReturned">
            <MaxReturned>
		<summary>
			Gets or sets the maximum number of items to return in a query request.
		</summary>
		<value>int</value>
	</MaxReturned>
        </member>
        <member name="P:QbModels.TransferQueryRq.MaxReturnedSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.TransferQueryRq.ModifiedDateRangeFilter">
            <ModifiedDateRangeFilter name="ModifiedDateRangeFilterDto">
		<summary>
			<para>Date range filter by date modified.</para>
			<example>
				<para>Sample code to specify modified date range for 1 week.</para>
				<c>qbRq.ModifiedDateRangeFilter = new() { FromModifiedDate = DateTime.Today.AddDays(-7), ToModifiedDate = DateTime.Now };</c>
			</example>
		</summary>
	</ModifiedDateRangeFilter>
            <remarks><b>Note: </b>Cannot be combined with TxnID or TxnDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.TransferQueryRq.TxnDateRangeFilter">
            <TxnDateRangeFilter name="TxnDateRangeFilterDto">
		<summary>
			<para>Date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromTxnDate = DateTime.Today.AddDays(-7), ToTxnDate = DateTime.Now };</c>
			</example>
		</summary>
	</TxnDateRangeFilter>
            <remarks><b>Note: </b>Cannot be combined with TxnID or ModifiedDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.TransferQueryRq.IncludeRetElement">
            <String name="IncludeRetElement">
		<summary>
			Gets or sets the IncludeRetElement property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.TransferQueryRq.SearchByTxnDateRange(System.DateTime,System.DateTime)">
            <summary>Searches the Transfers by Txn date range.</summary>
            <param name="searchFrom">The search from.</param>
            <param name="searchTo">The search to.</param>
        </member>
        <member name="M:QbModels.TransferQueryRq.SearchByModifiedDateRange(System.DateTime,System.DateTime)">
            <summary>Searches the Transfers by Modified date range.</summary>
            <param name="searchFrom">The search from.</param>
            <param name="searchTo">The search to.</param>
        </member>
        <member name="M:QbModels.TransferQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VehicleAddRq">
            <summary>Add request object for VehicleAddRq</summary>
        </member>
        <member name="M:QbModels.VehicleAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VehicleAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VehicleAddRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required</remarks>
        </member>
        <member name="P:QbModels.VehicleAddRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VehicleAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VehicleAddRq.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.VehicleAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VehicleMileageAddRq">
            <summary>Add request object for VehicleMileageAddRq</summary>
        </member>
        <member name="M:QbModels.VehicleMileageAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VehicleMileageAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.Vehicle">
            <DefaultRefDto name="VehicleRef">
		<summary>
			<para>Vehicle reference.</para>
			<example>
				<para>Sample code to specify vehicle reference.</para>
				<c>qbRq.Vehicle = new() { FullName = { Your Quickbooks vehicle name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Note: </b>Vehicle is required</remarks>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.Customer">
            <DefaultRefDto name="CustomerRef">
		<summary>
			<para>Customer reference.</para>
			<example>
				<para>Sample code to specify Customer reference.</para>
				<c>qbRq.Customer = new() { FullName = { Your Quickbooks customer name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.Item">
            <DefaultRefDto name="ItemRef">
		<summary>
			<para>Item reference.</para>
			<example>
				<para>Sample code to specify Item reference.</para>
				<c>qbRq.Item = new() { FullName = { Your Quickbooks item name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.TripStart">
            <Date name="TripStartDate">
		<summary>
			Gets or sets the TripStartDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.TripStartOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.TripEndDate">
            <Date name="TripEndDate">
		<summary>
			Gets or sets the ToModifiedDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.TripEndDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.OdometerStart">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Date[@name=&quot;OdometerStart&quot;]" />
            <remarks><b>Note: </b>Cannot be combined with TotalMiles</remarks>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.OdometerEnd">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Date[@name=&quot;OdometerEnd&quot;]" />
            <remarks><b>Note: </b>Required with OdometerStart</remarks>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.TotalMiles">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Date[@name=&quot;TotalMiles&quot;]" />
            <remarks><b>Note: </b>Cannot be combined with OdometerStart</remarks>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.Notes">
            <String name="Notes">
		<summary>
			Gets or sets the Notes property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VehicleMileageAddRq.BillableStatus">
            <RegEx name="BillableStatus">
		<summary>
			<para>
				Gets or sets the billable status.
				BillableStatus needs to be one of:
				<code>
					Billable
					NotBillable
					HasBeenBilled
				</code>
			</para>
		</summary>
		<value>The billable status.</value>
	</RegEx>
        </member>
        <member name="M:QbModels.VehicleMileageAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VehicleMileageQueryRq">
            <summary>Query request object for VehicleMileageQueryRq</summary>
        </member>
        <member name="M:QbModels.VehicleMileageQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VehicleMileageQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VehicleMileageQueryRq.TxnID">
            <TxnID name="TxnID">
		<summary>
			<para>TxnID to query for.</para>
			<example>
				<c>qbRq.TxnID = "Quickbooks.TxnID";</c>
			</example>
		</summary>
		<value>
			string of TxnID
		</value>
	</TxnID>
            <remarks><b>Note: </b>Cannot be combined with ModifiedDateRangeFilter or TxnDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.VehicleMileageQueryRq.MaxReturned">
            <MaxReturned>
		<summary>
			Gets or sets the maximum number of items to return in a query request.
		</summary>
		<value>int</value>
	</MaxReturned>
        </member>
        <member name="P:QbModels.VehicleMileageQueryRq.ModifiedDateRangeFilter">
            <ModifiedDateRangeFilter name="ModifiedDateRangeFilterDto">
		<summary>
			<para>Date range filter by date modified.</para>
			<example>
				<para>Sample code to specify modified date range for 1 week.</para>
				<c>qbRq.ModifiedDateRangeFilter = new() { FromModifiedDate = DateTime.Today.AddDays(-7), ToModifiedDate = DateTime.Now };</c>
			</example>
		</summary>
	</ModifiedDateRangeFilter>
            <remarks><b>Note: </b>Cannot be combined with TxnID or TxnDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.VehicleMileageQueryRq.TxnDateRangeFilter">
            <TxnDateRangeFilter name="TxnDateRangeFilterDto">
		<summary>
			<para>Date range filter for transactions.</para>
			<example>
				<para>Sample code to specify a transaction date range for 1 week.</para>
				<c>qbRq.TxnDateRangeFilter = new() { FromTxnDate = DateTime.Today.AddDays(-7), ToTxnDate = DateTime.Now };</c>
			</example>
		</summary>
	</TxnDateRangeFilter>
            <remarks><b>Note: </b>Cannot be combined with TxnID or ModifiedDateRangeFilter</remarks>
        </member>
        <member name="P:QbModels.VehicleMileageQueryRq.IncludeRetElement">
            <String name="IncludeRetElement">
		<summary>
			Gets or sets the IncludeRetElement property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.VehicleMileageQueryRq.SearchByTxnDateRange(System.DateTime,System.DateTime)">
            <summary>Searches the Vehicle Mileage by Txn date range.</summary>
            <param name="searchFrom">The search from.</param>
            <param name="searchTo">The search to.</param>
        </member>
        <member name="M:QbModels.VehicleMileageQueryRq.SearchByModifiedDateRange(System.DateTime,System.DateTime)">
            <summary>Searches the Vehicle Mileage by modified date range.</summary>
            <param name="searchFrom">The search from.</param>
            <param name="searchTo">The search to.</param>
        </member>
        <member name="M:QbModels.VehicleMileageQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VehicleModRq">
            <summary>Mod request object for VehicleModRq</summary>
        </member>
        <member name="M:QbModels.VehicleModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VehicleModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VehicleModRq.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID><ListID name="ListIDList">
		<summary>
			<para>ListID to query for.</para>
			<example>
				Example initialization of List for ListID:
				<c>qbRq.ListID = new() { "Quickbooks.ListID" };</c>
			</example>
		</summary>
		<value>
			List of ListID
		</value>
	</ListID>
            <remarks><b>Note: </b>ListID is required</remarks>
        </member>
        <member name="P:QbModels.VehicleModRq.EditSequence">
            <EditSequence>
		<summary>
			Gets or sets the EditSequence.
		</summary>
		<value>string</value>
	</EditSequence>
            <remarks><b>Note: </b>EditSequence is required</remarks>
        </member>
        <member name="P:QbModels.VehicleModRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
        </member>
        <member name="P:QbModels.VehicleModRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VehicleModRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VehicleModRq.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="M:QbModels.VehicleModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VehicleQueryRq">
            <summary>Query request object for VehicleQueryRq</summary>
        </member>
        <member name="M:QbModels.VehicleQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VehicleQueryRq" /> class.</summary>
        </member>
        <member name="M:QbModels.VehicleQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorAddRq">
            <summary>Add request object for Vendor</summary>
        </member>
        <member name="M:QbModels.VendorAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VendorAddRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required</remarks>
        </member>
        <member name="P:QbModels.VendorAddRq.IsActive">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/IsActive" />
        </member>
        <member name="P:QbModels.VendorAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorAddRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorAddRq.CompanyName">
            <CompanyName>
		<summary>
			Gets or sets the CompanyName property.
		</summary>
		<value>string</value>
	</CompanyName>
        </member>
        <member name="P:QbModels.VendorAddRq.Salutation">
            <Salutation>
		<summary>
			Gets or sets the Salutation property.
		</summary>
		<value>string</value>
	</Salutation>
        </member>
        <member name="P:QbModels.VendorAddRq.FirstName">
            <FirstName>
		<summary>
			Gets or sets the FirstName property.
		</summary>
		<value>string</value>
	</FirstName>
        </member>
        <member name="P:QbModels.VendorAddRq.MiddleName">
            <MiddleName>
		<summary>
			Gets or sets the MiddleName property.
		</summary>
		<value>string</value>
	</MiddleName>
        </member>
        <member name="P:QbModels.VendorAddRq.LastName">
            <LastName>
		<summary>
			Gets or sets the LastName property.
		</summary>
		<value>string</value>
	</LastName>
        </member>
        <member name="P:QbModels.VendorAddRq.JobTitle">
            <JobTitle>
		<summary>
			Gets or sets the JobTitle property.
		</summary>
		<value>string</value>
	</JobTitle>
        </member>
        <member name="P:QbModels.VendorAddRq.VendorAddress">
            <Address name="VendorAddressDto">
		<summary>
			<para>Vendor address object.</para>
			<example>
				<para>Sample code to specify a vendor address object.</para>
				<c>qbRq.VendorAddress = new() { Addr1 = "123 Main St", City = "MainCity", State = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.VendorAddRq.ShipAddress">
            <Address name="ShipAddressDto">
		<summary>
			<para>Ship address object.</para>
			<example>
				<para>Sample code to specify a shipping address object.</para>
				<c>qbRq.ShipAddress = new() { Addr1 = "123 Main St", City = "MainCity", State = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.VendorAddRq.Phone">
            <Phone>
		<summary>
			Gets or sets the Phone property.
		</summary>
		<value>string</value>
	</Phone>
        </member>
        <member name="P:QbModels.VendorAddRq.AltPhone">
            <AltPhone>
		<summary>
			Gets or sets the AltPhone property.
		</summary>
		<value>string</value>
	</AltPhone>
        </member>
        <member name="P:QbModels.VendorAddRq.Fax">
            <Fax>
		<summary>
			Gets or sets the Fax property.
		</summary>
		<value>string</value>
	</Fax>
        </member>
        <member name="P:QbModels.VendorAddRq.Email">
            <Email>
		<summary>
			Gets or sets the Email property.
		</summary>
		<value>string</value>
	</Email>
        </member>
        <member name="P:QbModels.VendorAddRq.Cc">
            <CC>
		<summary>
			Gets or sets the CC property.
		</summary>
		<value>string</value>
	</CC>
        </member>
        <member name="P:QbModels.VendorAddRq.Contact">
            <Contact>
		<summary>
			Gets or sets the Contact property.
		</summary>
		<value>string</value>
	</Contact>
        </member>
        <member name="P:QbModels.VendorAddRq.AltContact">
            <AltContact>
		<summary>
			Gets or sets the AltContact property.
		</summary>
		<value>string</value>
	</AltContact>
        </member>
        <member name="P:QbModels.VendorAddRq.AdditionalContact">
            <AdditionalContact name="AdditionalContactDto">
		<summary>
			<para>AdditionalContact object.</para>
			<example>
				<para>Sample code to specify an additional contact object.</para>
				<c>qbRq.AdditionalContact = new() { ContactName = "Name of contact" };</c>
			</example>
		</summary>
	</AdditionalContact>
            <remarks><b>Note: </b>AdditionalContact cannot have more than 8 entries</remarks>
        </member>
        <member name="P:QbModels.VendorAddRq.Contacts">
            <summary>Gets or sets the contacts.</summary>
            <value>The contacts.</value>
        </member>
        <member name="P:QbModels.VendorAddRq.NameOnCheck">
            <String name="NameOnCheck">
		<summary>
			Gets or sets the NameOnCheck property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorAddRq.AccountNumber">
            <String name="AccountNumber">
		<summary>
			Gets or sets the AccountNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorAddRq.Notes">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Notes" />
        </member>
        <member name="P:QbModels.VendorAddRq.AdditionalNotes">
            <AdditionalNotes name="AdditionalNotesDto">
		<summary>
			<para>AdditionalNotes object.</para>
			<example>
				<para>Sample code to specify an additional note object.</para>
				<c>qbRq.AdditionalNote = new() { Note = "Your note" };</c>
			</example>
		</summary>
	</AdditionalNotes>
        </member>
        <member name="P:QbModels.VendorAddRq.VendorType">
            <DefaultRefDto name="VendorTypeRef">
		<summary>
			<para>Vendor type reference.</para>
			<example>
				<para>Sample code to specify vendor type reference.</para>
				<c>qbRq.VendorType = new() { FullName = { Your Quickbooks vendor type name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorAddRq.Terms">
            <DefaultRefDto name="TermsRef">
		<summary>
			<para>Terms reference.</para>
			<example>
				<para>Sample code to specify terms reference.</para>
				<c>qbRq.Term = new() { FullName = { Your Quickbooks terms name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorAddRq.CreditLimit">
            <Balance name="CreditLimit">
		<summary>
			Gets or sets the CreditLimit property.
		</summary>
		<value>decimal</value>
	</Balance>
        </member>
        <member name="P:QbModels.VendorAddRq.CreditLimitOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorAddRq.VendorTaxIdent">
            <String name="VendorTaxIdent">
		<summary>
			Gets or sets the VendorTaxIdent property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorAddRq.IsVendorEligibleFor1099">
            <Bool name="IsVendorEligibleFor1099">
		<summary>
			Gets or sets the vendor eligibility for 1099 in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VendorAddRq.IsVendorEligibleFor1099Specified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorAddRq.OpenBalance">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/OpenBalance" />
        </member>
        <member name="P:QbModels.VendorAddRq.OpenBalanceOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorAddRq.OpenBalanceDate">
            <Balance name="OpenBalanceDate">
		<summary>
			Gets or sets the OpenBalanceDate property.
		</summary>
		<value>DateTime</value>
	</Balance>
        </member>
        <member name="P:QbModels.VendorAddRq.OpenBalanceDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorAddRq.BillingRate">
            <DefaultRefDto name="BillingRateRef">
		<summary>
			<para>Billing rate reference.</para>
			<example>
				<para>Sample code to specify billing rate reference.</para>
				<c>qbRq.BillingRate = new() { FullName = { Your Quickbooks billing rate name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorAddRq.PrefillAccount">
            <DefaultRefDto name="PrefillAccountRef">
		<summary>
			<para>Prefill account reference.</para>
			<example>
				<para>Sample code to specify prefill account reference.</para>
				<c>qbRq.PrefillAccount = new() { FullName = { Your Quickbooks prefill account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Note: </b>PrefillAccount cannot have more than 3 items in the list.</remarks>
        </member>
        <member name="P:QbModels.VendorAddRq.CurrencyRef">
            <DefaultRefDto name="CurrencyRef">
		<summary>
			<para>Currency reference.</para>
			<example>
				<para>Sample code to specify currency reference.</para>
				<c>qbRq.Currency = new() { FullName = { Your Quickbooks currency name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="M:QbModels.VendorAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorCreditAddRq">
            <summary>Add request object for VendorCreditAddRq</summary>
        </member>
        <member name="M:QbModels.VendorCreditAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorCreditAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.Vendor">
            <DefaultRefDto name="VendorRef">
		<summary>
			<para>Vendor reference.</para>
			<example>
				<para>Sample code to specify vendor reference.</para>
				<c>qbRq.Vendor = new() { FullName = { Your Quickbooks vendor name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.APAccount">
            <DefaultRefDto name="APAccountRef">
		<summary>
			<para>APAccount reference.</para>
			<example>
				<para>Sample code to specify APAccount reference.</para>
				<c>qbRq.APAccount = new() { FullName = { Your Quickbooks AP account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.TxnDate">
            <Date name="TxnDate">
		<summary>
			Gets or sets the TxnDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.TxnDateOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.RefNumber">
            <String name="RefNumber">
		<summary>
			Gets or sets the RefNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.ExchangeRate">
            <Decimal name="ExchangeRateString">
		<summary>
			Gets or sets the ExchangeRate property.
		</summary>
		<value>string</value>
	</Decimal>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.ExternalGUID">
            <ExternalGUID>
		<summary>
			Gets or sets the ExternalGUID.
		</summary>
		<value>string</value>
	</ExternalGUID>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.ExpenseLine">
            <ExpenseLine name="ExpenseLineAddDto">
		<summary>
			<para>Class object for ExpenseLineAdd.</para>
			<example>
				<para>Sample code to specify an expense line.</para>
				<c>qbRq.ExpenseLine = new() { TxnLineID = "{Your Quickbooks TxnLineID}" };</c>
			</example>
		</summary>
	</ExpenseLine>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.ItemLine">
            <ItemLine name="ItemLineAddDto">
		<summary>
			<para>Class object for ItemLineAdd.</para>
			<example>
				<para>Sample code to specify an item line.</para>
				<c>qbRq.ItemLineAdd = new() { Item = new() { FullName = "{Quickbooks Item name}" } };</c>
			</example>
		</summary>
	</ItemLine>
            <remarks><b>Note: </b>Cannot be combined with ItemGroupLine</remarks>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.ItemGroupLine">
            <ItemLine name="ItemLineGroupAddDto">
		<summary>
			<para>Class object for ItemLineGroupAdd.</para>
			<example>
				<para>Sample code to specify an item line group.</para>
				<c>qbRq.ItemLineGroupAdd = new() { ItemGroup = new() { FullName = "{Quickbooks Item Group name}" } };</c>
			</example>
		</summary>
	</ItemLine>
            <remarks><b>Note: </b>Cannot be combined with ItemLine</remarks>
        </member>
        <member name="P:QbModels.VendorCreditAddRq.DataExtRet">
            <DataExtRet name="DataExtRetDto">
		<summary>
			<para>Class object for DataExtRet.</para>
			<example>
				<para>Sample code to specify an data extension.</para>
				<c>qbRq.DataExtRet = new() { OwnerID = "{Quickbooks OwnerID}, DataExtName = "{Data ext name}" };</c>
			</example>
		</summary>
	</DataExtRet>
        </member>
        <member name="M:QbModels.VendorCreditAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorCreditModRq">
            <summary>Mod request object for VendorCreditAddRq</summary>
        </member>
        <member name="M:QbModels.VendorCreditModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorCreditModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VendorCreditModRq.Vendor">
            <DefaultRefDto name="VendorRef">
		<summary>
			<para>Vendor reference.</para>
			<example>
				<para>Sample code to specify vendor reference.</para>
				<c>qbRq.Vendor = new() { FullName = { Your Quickbooks vendor name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorCreditModRq.APAccount">
            <DefaultRefDto name="APAccountRef">
		<summary>
			<para>APAccount reference.</para>
			<example>
				<para>Sample code to specify APAccount reference.</para>
				<c>qbRq.APAccount = new() { FullName = { Your Quickbooks AP account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorCreditModRq.Memo">
            <String name="Memo">
		<summary>
			Gets or sets the Memo property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ExchangeRate">
            <Decimal name="ExchangeRateString">
		<summary>
			Gets or sets the ExchangeRate property.
		</summary>
		<value>string</value>
	</Decimal>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ClearExpenseLines">
            <Bool name="ClearExpenseLines">
		<summary>
			Gets or sets the ClearExpenseLines in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ClearExpenseLinesSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ExpenseLine">
            <ExpenseLine name="ExpenseLineModDto">
		<summary>
			<para>Class object for ExpenseLineMod.</para>
			<example>
				<para>Sample code to specify an expense line mod.</para>
				<c>qbRq.ExpenseLineMod = new() { TxnLineID = "{Your Quickbooks TxnLineID}" };</c>
			</example>
		</summary>
	</ExpenseLine>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ClearItemLines">
            <Bool name="ClearItemLines">
		<summary>
			Gets or sets the ClearItemLines in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ClearItemLinesSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ItemLine">
            <ItemLine name="ItemLineModDto">
		<summary>
			<para>Class object for ItemLineMod.</para>
			<example>
				<para>Sample code to specify an item line mod.</para>
				<c>qbRq.ItemLineMod = new() { Item = new() { FullName = "{Quickbooks Item name}" } };</c>
			</example>
		</summary>
	</ItemLine>
            <remarks><b>Note: </b>Cannot be combined with ItemGroupLine</remarks>
        </member>
        <member name="P:QbModels.VendorCreditModRq.ItemGroupLine">
            <ItemLine name="ItemLineGroupModDto">
		<summary>
			<para>Class object for ItemLineGroupMod.</para>
			<example>
				<para>Sample code to specify an item line group mod.</para>
				<c>qbRq.ItemLineGroupMod = new() { ItemGroup = new() { FullName = "{Quickbooks Item Group name}" } };</c>
			</example>
		</summary>
	</ItemLine>
            <remarks><b>Note: </b>Cannot be combined with ItemLine</remarks>
        </member>
        <member name="M:QbModels.VendorCreditModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorCreditQueryRq">
            <summary>Query request object for VendorCreditQueryRq</summary>
        </member>
        <member name="M:QbModels.VendorCreditQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorCreditQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VendorCreditQueryRq.IncludeLineItems">
            <Bool name="IncludeLineItems">
		<summary>
			Gets or sets the whether query request should return line items.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VendorCreditQueryRq.IncludeLineItemsSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorCreditQueryRq.IncludeLinkedTxns">
            <Bool name="IncludeLinkedTxns">
		<summary>
			Gets or sets the whether query request should return linked transactions.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VendorCreditQueryRq.IncludeLinkedTxnsSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="M:QbModels.VendorCreditQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorModRq">
            <summary>Mod request object for Vendor</summary>
        </member>
        <member name="M:QbModels.VendorModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VendorModRq.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID>
        </member>
        <member name="P:QbModels.VendorModRq.EditSequence">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/ListID[@name=&quot;EditSequence&quot;]" />
        </member>
        <member name="P:QbModels.VendorModRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
        </member>
        <member name="P:QbModels.VendorModRq.IsActive">
            <Bool name="IsActive">
		<summary>
			Gets or sets the active status in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VendorModRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorModRq.ClassRef">
            <DefaultRefDto name="ClassRef">
		<summary>
			<para>Filter by Quickbooks currency.</para>
			<example>
				<para>Sample code to specify Class reference.</para>
				<c>qbRq.ClassRef = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorModRq.CompanyName">
            <CompanyName>
		<summary>
			Gets or sets the CompanyName property.
		</summary>
		<value>string</value>
	</CompanyName>
        </member>
        <member name="P:QbModels.VendorModRq.Salutation">
            <Salutation>
		<summary>
			Gets or sets the Salutation property.
		</summary>
		<value>string</value>
	</Salutation>
        </member>
        <member name="P:QbModels.VendorModRq.FirstName">
            <FirstName>
		<summary>
			Gets or sets the FirstName property.
		</summary>
		<value>string</value>
	</FirstName>
        </member>
        <member name="P:QbModels.VendorModRq.MiddleName">
            <MiddleName>
		<summary>
			Gets or sets the MiddleName property.
		</summary>
		<value>string</value>
	</MiddleName>
        </member>
        <member name="P:QbModels.VendorModRq.LastName">
            <LastName>
		<summary>
			Gets or sets the LastName property.
		</summary>
		<value>string</value>
	</LastName>
        </member>
        <member name="P:QbModels.VendorModRq.JobTitle">
            <JobTitle>
		<summary>
			Gets or sets the JobTitle property.
		</summary>
		<value>string</value>
	</JobTitle>
        </member>
        <member name="P:QbModels.VendorModRq.VendorAddress">
            <Address name="VendorAddressDto">
		<summary>
			<para>Vendor address object.</para>
			<example>
				<para>Sample code to specify a vendor address object.</para>
				<c>qbRq.VendorAddress = new() { Addr1 = "123 Main St", City = "MainCity", State = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.VendorModRq.ShipAddress">
            <Address name="ShipAddressDto">
		<summary>
			<para>Ship address object.</para>
			<example>
				<para>Sample code to specify a shipping address object.</para>
				<c>qbRq.ShipAddress = new() { Addr1 = "123 Main St", City = "MainCity", State = "FL" };</c>
			</example>
		</summary>
	</Address>
        </member>
        <member name="P:QbModels.VendorModRq.Phone">
            <Phone>
		<summary>
			Gets or sets the Phone property.
		</summary>
		<value>string</value>
	</Phone>
        </member>
        <member name="P:QbModels.VendorModRq.AltPhone">
            <AltPhone>
		<summary>
			Gets or sets the AltPhone property.
		</summary>
		<value>string</value>
	</AltPhone>
        </member>
        <member name="P:QbModels.VendorModRq.Fax">
            <Fax>
		<summary>
			Gets or sets the Fax property.
		</summary>
		<value>string</value>
	</Fax>
        </member>
        <member name="P:QbModels.VendorModRq.Email">
            <Email>
		<summary>
			Gets or sets the Email property.
		</summary>
		<value>string</value>
	</Email>
        </member>
        <member name="P:QbModels.VendorModRq.Cc">
            <CC>
		<summary>
			Gets or sets the CC property.
		</summary>
		<value>string</value>
	</CC>
        </member>
        <member name="P:QbModels.VendorModRq.Contact">
            <Contact>
		<summary>
			Gets or sets the Contact property.
		</summary>
		<value>string</value>
	</Contact>
        </member>
        <member name="P:QbModels.VendorModRq.AltContact">
            <AltContact>
		<summary>
			Gets or sets the AltContact property.
		</summary>
		<value>string</value>
	</AltContact>
        </member>
        <member name="P:QbModels.VendorModRq.AdditionalContact">
            <AdditionalContact name="AdditionalContactDto">
		<summary>
			<para>AdditionalContact object.</para>
			<example>
				<para>Sample code to specify an additional contact object.</para>
				<c>qbRq.AdditionalContact = new() { ContactName = "Name of contact" };</c>
			</example>
		</summary>
	</AdditionalContact>
            <remarks><b>Note: </b>AdditionalContact cannot have more than 8 entries</remarks>
        </member>
        <member name="P:QbModels.VendorModRq.Contacts">
            <summary>Gets or sets the contacts.</summary>
            <value>The contacts.</value>
        </member>
        <member name="P:QbModels.VendorModRq.NameOnCheck">
            <String name="NameOnCheck">
		<summary>
			Gets or sets the NameOnCheck property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorModRq.AccountNumber">
            <String name="AccountNumber">
		<summary>
			Gets or sets the AccountNumber.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorModRq.Notes">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/Notes" />
        </member>
        <member name="P:QbModels.VendorModRq.AdditionalNotes">
            <AdditionalNotes name="AdditionalNotesDto">
		<summary>
			<para>AdditionalNotes object.</para>
			<example>
				<para>Sample code to specify an additional note object.</para>
				<c>qbRq.AdditionalNote = new() { Note = "Your note" };</c>
			</example>
		</summary>
	</AdditionalNotes>
        </member>
        <member name="P:QbModels.VendorModRq.VendorType">
            <DefaultRefDto name="VendorTypeRef">
		<summary>
			<para>Vendor type reference.</para>
			<example>
				<para>Sample code to specify vendor type reference.</para>
				<c>qbRq.VendorType = new() { FullName = { Your Quickbooks vendor type name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorModRq.Terms">
            <DefaultRefDto name="TermsRef">
		<summary>
			<para>Terms reference.</para>
			<example>
				<para>Sample code to specify terms reference.</para>
				<c>qbRq.Term = new() { FullName = { Your Quickbooks terms name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorModRq.CreditLimit">
            <Balance name="CreditLimit">
		<summary>
			Gets or sets the CreditLimit property.
		</summary>
		<value>decimal</value>
	</Balance>
        </member>
        <member name="P:QbModels.VendorModRq.CreditLimitOverload">
            <XmlSerializer name="Overload">
		<summary>
			Overloaded property used for XmlSerialization.  Use FromTxnDate property to update.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorModRq.VendorTaxIdent">
            <String name="VendorTaxIdent">
		<summary>
			Gets or sets the VendorTaxIdent property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.VendorModRq.IsVendorEligibleFor1099">
            <Bool name="IsVendorEligibleFor1099">
		<summary>
			Gets or sets the vendor eligibility for 1099 in a request.
		</summary>
		<value>bool</value>
	</Bool>
        </member>
        <member name="P:QbModels.VendorModRq.IsVendorEligibleFor1099Specified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorModRq.BillingRate">
            <DefaultRefDto name="BillingRateRef">
		<summary>
			<para>Billing rate reference.</para>
			<example>
				<para>Sample code to specify billing rate reference.</para>
				<c>qbRq.BillingRate = new() { FullName = { Your Quickbooks billing rate name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="P:QbModels.VendorModRq.PrefillAccount">
            <DefaultRefDto name="PrefillAccountRef">
		<summary>
			<para>Prefill account reference.</para>
			<example>
				<para>Sample code to specify prefill account reference.</para>
				<c>qbRq.PrefillAccount = new() { FullName = { Your Quickbooks prefill account name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
            <remarks><b>Note: </b>PrefillAccount cannot have more than 3 items</remarks>
        </member>
        <member name="P:QbModels.VendorModRq.CurrencyRef">
            <DefaultRefDto name="CurrencyRef">
		<summary>
			<para>Currency reference.</para>
			<example>
				<para>Sample code to specify currency reference.</para>
				<c>qbRq.Currency = new() { FullName = { Your Quickbooks currency name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="M:QbModels.VendorModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorQueryRq">
            <summary>Query request object for Vendor</summary>
        </member>
        <member name="M:QbModels.VendorQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VendorQueryRq.TotalBalanceFilter">
            <Balance name="TotalBalanceFilterDto">
		<summary>
			<para>Total balance filter.</para>
			<example>
				<para>Sample code to specify a total balance filter.</para>
				<c>qbRq.TotalBalanceFilter = new() { Operator = "{Quickbooks Operator}", Amount = 123.45 };</c>
			</example>
		</summary>
	</Balance>
        </member>
        <member name="P:QbModels.VendorQueryRq.ClassFilter">
            <EntityFilter name="ClassFilterDto">
		<summary>
			<para>Filter by Quickbooks class.</para>
			<example>
				<para>Sample code to specify class filter.</para>
				<c>qbRq.EntityFilter = new() { FullName = { Your Quickbooks class name } };</c>
			</example>
		</summary>
	</EntityFilter>
        </member>
        <member name="M:QbModels.VendorQueryRq.SearchByTotalBalance(System.String,System.Decimal)">
            <summary>Instantiate and initialize TotalBalance filter</summary>
            <param name="_operator">The operator.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:QbModels.VendorQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorTypeAddRq">
            <summary>Add request object for VendorType</summary>
        </member>
        <member name="M:QbModels.VendorTypeAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorTypeAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.VendorTypeAddRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required</remarks>
        </member>
        <member name="P:QbModels.VendorTypeAddRq.IsActive">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/IsActive" />
        </member>
        <member name="P:QbModels.VendorTypeAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.VendorTypeAddRq.Parent">
            <DefaultRefDto name="ParentRef">
		<summary>
			<para>Quickbooks Parent reference.</para>
			<example>
				<para>Sample code to specify parent reference.</para>
				<c>qbRq.Parent = new() { FullName = { Your Quickbooks parent name } };</c>
			</example>
		</summary>
	</DefaultRefDto>
        </member>
        <member name="M:QbModels.VendorTypeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.VendorTypeQueryRq">
            <summary>Query request object for VendorType</summary>
        </member>
        <member name="M:QbModels.VendorTypeQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.VendorTypeQueryRq" /> class.</summary>
        </member>
        <member name="M:QbModels.VendorTypeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.WorkersCompCodeAddRq">
            <summary>Add request object for WorkersCompCode</summary>
        </member>
        <member name="M:QbModels.WorkersCompCodeAddRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.WorkersCompCodeAddRq" /> class.</summary>
        </member>
        <member name="P:QbModels.WorkersCompCodeAddRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
            <remarks><b>Note: </b>Name is required</remarks>
        </member>
        <member name="P:QbModels.WorkersCompCodeAddRq.IsActive">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/IsActive" />
        </member>
        <member name="P:QbModels.WorkersCompCodeAddRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.WorkersCompCodeAddRq.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.WorkersCompCodeAddRq.RateEntry">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/RateEntry[@name=&quot;RateEntryrDto&quot;]" />
            <remarks><b>Note: </b>RateEntry is required</remarks>
        </member>
        <member name="M:QbModels.WorkersCompCodeAddRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.WorkersCompCodeModRq">
            <summary>Mod request object for WorkersCompCode</summary>
        </member>
        <member name="M:QbModels.WorkersCompCodeModRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.WorkersCompCodeModRq" /> class.</summary>
        </member>
        <member name="P:QbModels.WorkersCompCodeModRq.ListID">
            <ListID name="ListID">
		<summary>
			<para>ListID to query for.</para>
			<example>
				<c>qbRq.ListID = "Quickbooks.ListID";</c>
			</example>
		</summary>
		<value>
			string of ListID
		</value>
	</ListID>
            <remarks><b>Note: </b>ListID is required</remarks>
        </member>
        <member name="P:QbModels.WorkersCompCodeModRq.EditSequence">
            <EditSequence>
		<summary>
			Gets or sets the EditSequence.
		</summary>
		<value>string</value>
	</EditSequence>
        </member>
        <member name="P:QbModels.WorkersCompCodeModRq.Name">
            <Name>
		<summary>
			Gets or sets the Name property.
		</summary>
		<value>string</value>
	</Name>
        </member>
        <member name="P:QbModels.WorkersCompCodeModRq.IsActive">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/CommonDoc.xml" path="QbModelCommonDoc/IsActive" />
        </member>
        <member name="P:QbModels.WorkersCompCodeModRq.IsActiveSpecified">
            <XmlSerializer name="Specified">
		<summary>
			Properties ending with Specified is used by the XmlSerializer to determine if property should be outputted.
		</summary>
	</XmlSerializer>
        </member>
        <member name="P:QbModels.WorkersCompCodeModRq.Desc">
            <String name="Desc">
		<summary>
			Gets or sets the Desc property.
		</summary>
		<value>string</value>
	</String>
        </member>
        <member name="P:QbModels.WorkersCompCodeModRq.RateEntry">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DtoDoc.xml" path="QbModelDtoDoc/RateEntry[@name=&quot;RateEntryrDto&quot;]" />
        </member>
        <member name="M:QbModels.WorkersCompCodeModRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.WorkersCompCodeQueryRq">
            <summary>Query request object for WorkersCompCode</summary>
        </member>
        <member name="M:QbModels.WorkersCompCodeQueryRq.#ctor">
            <summary>Initializes a new instance of the <see cref="T:QbModels.WorkersCompCodeQueryRq" /> class.</summary>
        </member>
        <member name="P:QbModels.WorkersCompCodeQueryRq.FromEffectiveDate">
            <Date name="FromEffectiveDate">
		<summary>
			Gets or sets the FromEffectiveDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="P:QbModels.WorkersCompCodeQueryRq.ToEffectiveDate">
            <Date name="ToEffectiveDate">
		<summary>
			Gets or sets the ToEffectiveDate property.
		</summary>
		<value>DateTime</value>
	</Date>
        </member>
        <member name="M:QbModels.WorkersCompCodeQueryRq.SearchByEffectiveDate(System.DateTime,System.DateTime)">
            <summary>Sets the properties for searches by effective date.</summary>
            <param name="searchFrom">The search from.</param>
            <param name="searchTo">The search to.</param>
        </member>
        <member name="M:QbModels.WorkersCompCodeQueryRq.ToString">
            <ToString>
		<summary>Overriding ToString() to output the request QBXML.</summary>
		<remarks>
			<b>Note: </b>The ToString() will output the QBXML regardless if the entity is in a valid state or not
		</remarks>
	</ToString>
        </member>
        <member name="T:QbModels.BaseView`1">
            <summary>Common View properties</summary>
            <typeparam name="T">Type of Quickbooks object to use in the view</typeparam>
        </member>
        <member name="M:QbModels.BaseView`1.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.BaseView`1" /> class.</summary>
            <param name="qbXmlRs">The qb XML rs.</param>
        </member>
        <member name="P:QbModels.BaseView`1.resultItems">
            <summary>List of result items of type T</summary>
            <value>The result items.</value>
        </member>
        <member name="M:QbModels.BaseView`1.ReadXml(System.String)">
            <summary>Reads the XML into the class.</summary>
            <param name="qbRs">The source XML to import.</param>
        </member>
        <member name="T:QbModels.BaseViewProperties">
            <summary>Base properties for request views.</summary>
        </member>
        <member name="P:QbModels.BaseViewProperties.StatusCode">
            <summary>Quickbooks request result StatusCode</summary>
            <value>The status code.</value>
        </member>
        <member name="P:QbModels.BaseViewProperties.StatusSeverity">
            <summary>Quickbooks request result StatusSeverity</summary>
            <value>The status severity.</value>
        </member>
        <member name="P:QbModels.BaseViewProperties.StatusMessage">
            <summary>Quickbooks request result StatusMessage</summary>
            <value>The status message.</value>
        </member>
        <member name="P:QbModels.BaseViewProperties.RemainingCount">
            <summary>Quickbooks query request remaining items </summary>
            <value>The remaining count.</value>
        </member>
        <member name="P:QbModels.BaseViewProperties.IteratorID">
            <summary>Quickbooks query request IteratorID</summary>
            <value>The iterator identifier.</value>
        </member>
        <member name="P:QbModels.BaseViewProperties.ResultType">
            <summary>The name of the Quickbooks request.</summary>
            <value>The type of the result.</value>
        </member>
        <member name="P:QbModels.BaseViewProperties.ParseError">
            <summary>Gets the parse error when reading results XML</summary>
            <value>The parse error.</value>
        </member>
        <member name="P:QbModels.BaseViewProperties.ParseErrorXml">
            <summary>Source XML generating parse error</summary>
            <value>The parse error XML.</value>
        </member>
        <member name="M:QbModels.BaseViewProperties.ReadXml(System.String)">
            <summary>Override this method with custom XML reader.</summary>
            <param name="qbRs">The source XML.</param>
        </member>
        <member name="T:QbModels.QbAccountsView">
            <summary>Results view for AccountQueryRq/AccountAddRq/AccountModRq calls</summary>
        </member>
        <member name="M:QbModels.QbAccountsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbAccountsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbAccountsView.Accounts">
            <summary>
                List of Account from QBXML request result.
            </summary>
            <value>
                List of AccountRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbAccountsView.TotalAccounts">
            <summary>
                Total number of Account items in the request result.
            </summary>
            <value>
                The total number of Account items.
            </value>
        </member>
        <member name="T:QbModels.QbARRefundCreditCardsView">
            <summary>Results view for ARRefundCreditCardQueryRq/ARRefundCreditCardAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbARRefundCreditCardsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbARRefundCreditCardsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbARRefundCreditCardsView.ARRefundCreditCards">
            <summary>
                List of ARRefundCreditCard from QBXML request result.
            </summary>
            <value>
                List of ARRefundCreditCardRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbARRefundCreditCardsView.TotalARRefundCreditCards">
            <summary>
                Total number of ARRefundCreditCard items in the request result.
            </summary>
            <value>
                The total number of ARRefundCreditCard items.
            </value>
        </member>
        <member name="T:QbModels.QbBillingRatesView">
            <summary>Results view for BillingRateQueryRq call</summary>
        </member>
        <member name="M:QbModels.QbBillingRatesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbBillingRatesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbBillingRatesView.BillingRates">
            <summary>
                List of BillingRate from QBXML request result.
            </summary>
            <value>
                List of BillingRateRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbBillingRatesView.TotalBillingRates">
            <summary>
                Total number of BillingRate items in the request result.
            </summary>
            <value>
                The total number of BillingRate items.
            </value>
        </member>
        <member name="T:QbModels.QbBillPaymentChecksView">
            <summary>Results view for BillPaymentCheckQueryRq/BillPaymentCheckAddRq/BillPaymentCheckModRq calls</summary>
        </member>
        <member name="M:QbModels.QbBillPaymentChecksView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbBillPaymentChecksView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbBillPaymentChecksView.Checks">
            <summary>
                List of BillPaymentCheck from QBXML request result.
            </summary>
            <value>
                List of BillPaymentCheckRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbBillPaymentChecksView.TotalChecks">
            <summary>
                Total number of BillPaymentCheck items in the request result.
            </summary>
            <value>
                The total number of BillPaymentCheck items.
            </value>
        </member>
        <member name="T:QbModels.QbBillPaymentCreditCardsView">
            <summary>Results view for BillPaymentCreditCardQueryRq/BillPaymentCreditCardAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbBillPaymentCreditCardsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbBillPaymentCreditCardsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbBillPaymentCreditCardsView.BillPaymentCreditCards">
            <summary>
                List of BillPaymentCreditCard from QBXML request result.
            </summary>
            <value>
                List of BillPaymentCreditCardRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbBillPaymentCreditCardsView.TotalBillPaymentCreditCards">
            <summary>
                Total number of BillPaymentCreditCard items in the request result.
            </summary>
            <value>
                The total number of BillPaymentCreditCard items.
            </value>
        </member>
        <member name="T:QbModels.QbBillToPaysView">
            <summary>Results view for BillToPayQueryRq call</summary>
        </member>
        <member name="M:QbModels.QbBillToPaysView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbBillToPaysView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbBillToPaysView.BillToPays">
            <summary>
                List of BillToPay from QBXML request result.
            </summary>
            <value>
                List of BillToPayRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbBillToPaysView.TotalBillToPays">
            <summary>
                Total number of BillToPay items in the request result.
            </summary>
            <value>
                The total number of BillToPay items.
            </value>
        </member>
        <member name="T:QbModels.QbBillsView">
            <summary>Results view for BillQueryRq/BillAddRq/BillModRq calls</summary>
        </member>
        <member name="M:QbModels.QbBillsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbBillsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbBillsView.Bills">
            <summary>
                List of Bill from QBXML request result.
            </summary>
            <value>
                List of BillRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbBillsView.TotalBills">
            <summary>
                Total number of Bill items in the request result.
            </summary>
            <value>
                The total number of Bill items.
            </value>
        </member>
        <member name="T:QbModels.QbChargesView">
            <summary>Results view for ChargeQueryRq/ChargeAddRq/ChargeModRq calls</summary>
        </member>
        <member name="M:QbModels.QbChargesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbChargesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbChargesView.Charges">
            <summary>
                List of Charge from QBXML request result.
            </summary>
            <value>
                List of ChargeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbChargesView.TotalCharges">
            <summary>
                Total number of Charge items in the request result.
            </summary>
            <value>
                The total number of Charge items.
            </value>
        </member>
        <member name="T:QbModels.QbChecksView">
            <summary>Results view for CheckQueryRq/CheckAddRq/CheckModRq calls</summary>
        </member>
        <member name="M:QbModels.QbChecksView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbChecksView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbChecksView.Checks">
            <summary>
                List of Check from QBXML request result.
            </summary>
            <value>
                List of CheckRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbChecksView.TotalChecks">
            <summary>
                Total number of Check items in the request result.
            </summary>
            <value>
                The total number of Check items.
            </value>
        </member>
        <member name="T:QbModels.QbClassesView">
            <summary>Results view for ClassQueryRq/ClassAddRq/ClassModRq calls</summary>
        </member>
        <member name="M:QbModels.QbClassesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbClassesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbClassesView.Classes">
            <summary>
                List of Class from QBXML request result.
            </summary>
            <value>
                List of ClassRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbClassesView.TotalClasses">
            <summary>
                Total number of Class items in the request result.
            </summary>
            <value>
                The total number of Class items.
            </value>
        </member>
        <member name="T:QbModels.QbCompanyView">
            <summary>Results view for CompanyQueryRq call</summary>
        </member>
        <member name="M:QbModels.QbCompanyView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCompanyView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCompanyView.Company">
            <summary>
                Company from QBXML request result.
            </summary>
            <value>
                CompanyRetDto.
            </value>
        </member>
        <member name="T:QbModels.QbCreditCardChargesView">
            <summary>Results view for CreditCardChargeQueryRq/CreditCardChargeAddRq/CreditCardChargeModRq calls</summary>
        </member>
        <member name="M:QbModels.QbCreditCardChargesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCreditCardChargesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCreditCardChargesView.CreditCardCharges">
            <summary>
                List of CreditCardCharge from QBXML request result.
            </summary>
            <value>
                List of CreditCardChargeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbCreditCardChargesView.TotalCreditCardCharges">
            <summary>
                Total number of CreditCardCharge items in the request result.
            </summary>
            <value>
                The total number of CreditCardCharge items.
            </value>
        </member>
        <member name="T:QbModels.QbCreditCardCreditsView">
            <summary>Results view for CreditCardCreditQueryRq/CreditCardCreditAddRq/CreditCardCreditModRq calls</summary>
        </member>
        <member name="M:QbModels.QbCreditCardCreditsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCreditCardCreditsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCreditCardCreditsView.CreditCardCredits">
            <summary>
                List of CreditCardCredit from QBXML request result.
            </summary>
            <value>
                List of CreditCardCreditRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbCreditCardCreditsView.TotalCreditCardCredits">
            <summary>
                Total number of CreditCardCredit items in the request result.
            </summary>
            <value>
                The total number of CreditCardCredit items.
            </value>
        </member>
        <member name="T:QbModels.QbCreditMemosView">
            <summary>Results view for CreditMemoQueryRq/CreditMemoAddRq/CreditMemoModRq calls</summary>
        </member>
        <member name="M:QbModels.QbCreditMemosView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCreditMemosView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCreditMemosView.CreditMemos">
            <summary>
                List of CreditMemo from QBXML request result.
            </summary>
            <value>
                List of CreditMemoRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbCreditMemosView.TotalCreditMemos">
            <summary>
                Total number of CreditMemo items in the request result.
            </summary>
            <value>
                The total number of CreditMemo items.
            </value>
        </member>
        <member name="T:QbModels.QbCurrencysView">
            <summary>Results view for CurrencyQueryRq/CurrencyAddRq/CurrencyModRq calls</summary>
        </member>
        <member name="M:QbModels.QbCurrencysView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCurrencysView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCurrencysView.Currencys">
            <summary>
                List of Currency from QBXML request result.
            </summary>
            <value>
                List of CurrencyRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbCurrencysView.TotalCurrencys">
            <summary>
                Total number of Currency items in the request result.
            </summary>
            <value>
                The total number of Currency items.
            </value>
        </member>
        <member name="T:QbModels.QbCustomerMsgsView">
            <summary>Results view for CustomerMsgQueryRq/CustomerMsgAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbCustomerMsgsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCustomerMsgsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCustomerMsgsView.CustomerMsgs">
            <summary>
                List of CustomerMsg from QBXML request result.
            </summary>
            <value>
                List of CustomerMsgRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbCustomerMsgsView.TotalCustomerMsgs">
            <summary>
                Total number of CustomerMsg items in the request result.
            </summary>
            <value>
                The total number of CustomerMsg items.
            </value>
        </member>
        <member name="T:QbModels.QbCustomersView">
            <summary>Results view for CustomerQueryRq/CustomerAddRq/CustomerModRq calls</summary>
        </member>
        <member name="M:QbModels.QbCustomersView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCustomersView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCustomersView.Customers">
            <summary>
                List of Customer from QBXML request result.
            </summary>
            <value>
                List of CustomerRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbCustomersView.TotalCustomers">
            <summary>
                Total number of Customer items in the request result.
            </summary>
            <value>
                The total number of Customer items.
            </value>
        </member>
        <member name="T:QbModels.QbCustomerTypesView">
            <summary>Results view for CustomerTypeQueryRq/CustomerTypeAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbCustomerTypesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbCustomerTypesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbCustomerTypesView.CustomerTypes">
            <summary>
                List of CustomerType from QBXML request result.
            </summary>
            <value>
                List of CustomerTypeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbCustomerTypesView.TotalCustomerTypes">
            <summary>
                Total number of CustomerType items in the request result.
            </summary>
            <value>
                The total number of CustomerType items.
            </value>
        </member>
        <member name="T:QbModels.QbDepositsView">
            <summary>Results view for DepositQueryRq/DepositAddRq/DepositModRq calls</summary>
        </member>
        <member name="M:QbModels.QbDepositsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbDepositsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbDepositsView.Deposits">
            <summary>
                List of Deposit from QBXML request result.
            </summary>
            <value>
                List of DepositRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbDepositsView.TotalDeposits">
            <summary>
                Total number of Deposit items in the request result.
            </summary>
            <value>
                The total number of Deposit items.
            </value>
        </member>
        <member name="T:QbModels.QbEmployeesView">
            <summary>Results view for EmployeeQueryRq/EmployeeAddRq/EmployeeModRq calls</summary>
        </member>
        <member name="M:QbModels.QbEmployeesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbEmployeesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbEmployeesView.Employees">
            <summary>
                List of Employee from QBXML request result.
            </summary>
            <value>
                List of EmployeeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbEmployeesView.TotalEmployees">
            <summary>
                Total number of Employee items in the request result.
            </summary>
            <value>
                The total number of Employee items.
            </value>
        </member>
        <member name="T:QbModels.QbEstimatesView">
            <summary>Results view for EstimateQueryRq/EstimateAddRq/EstimateModRq calls</summary>
        </member>
        <member name="M:QbModels.QbEstimatesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbEstimatesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbEstimatesView.Estimates">
            <summary>
                List of Estimate from QBXML request result.
            </summary>
            <value>
                List of EstimateRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbEstimatesView.TotalEstimates">
            <summary>
                Total number of Estimate items in the request result.
            </summary>
            <value>
                The total number of Estimate items.
            </value>
        </member>
        <member name="T:QbModels.QbInvoicesView">
            <summary>Results view for InvoiceQueryRq/InvoiceAddRq/InvoiceModRq calls</summary>
        </member>
        <member name="M:QbModels.QbInvoicesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbInvoicesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbInvoicesView.Invoices">
            <summary>
                List of Invoice from QBXML request result.
            </summary>
            <value>
                List of InvoiceRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbInvoicesView.TotalInvoices">
            <summary>
                Total number of Invoice items in the request result.
            </summary>
            <value>
                The total number of Invoice items.
            </value>
        </member>
        <member name="T:QbModels.QbItemDiscountsView">
            <summary>Results view for ItemDiscountQueryRq/ItemDiscountAddRq/ItemDiscountModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemDiscountsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemDiscountsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemDiscountsView.ItemDiscounts">
            <summary>
                List of ItemDiscount from QBXML request result.
            </summary>
            <value>
                List of ItemDiscountRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemDiscountsView.TotalItemDiscounts">
            <summary>
                Total number of ItemDiscount items in the request result.
            </summary>
            <value>
                The total number of ItemDiscount items.
            </value>
        </member>
        <member name="T:QbModels.QbItemFixedAssetsView">
            <summary>Results view for ItemFixedAssetQueryRq/ItemFixedAssetAddRq/ItemFixedAssetModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemFixedAssetsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemFixedAssetsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemFixedAssetsView.ItemFixedAssets">
            <summary>
                List of ItemFixedAsset from QBXML request result.
            </summary>
            <value>
                List of ItemFixedAssetRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemFixedAssetsView.TotalItemFixedAssets">
            <summary>
                Total number of ItemFixedAsset items in the request result.
            </summary>
            <value>
                The total number of ItemFixedAsset items.
            </value>
        </member>
        <member name="T:QbModels.QbItemGroupsView">
            <summary>Results view for ItemGroupQueryRq/ItemGroupAddRq/ItemGroupModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemGroupsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemGroupsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemGroupsView.ItemGroups">
            <summary>
                List of ItemGroup from QBXML request result.
            </summary>
            <value>
                List of ItemGroupRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemGroupsView.TotalItemGroups">
            <summary>
                Total number of ItemGroup items in the request result.
            </summary>
            <value>
                The total number of ItemGroup items.
            </value>
        </member>
        <member name="T:QbModels.QbItemInventoryView">
            <summary>Results view for ItemInventoryQueryRq/ItemInventoryAddRq/ItemInventoryModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemInventoryView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemInventoryView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemInventoryView.ItemInventory">
            <summary>
                List of ItemInventory from QBXML request result.
            </summary>
            <value>
                List of ItemInventoryRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemInventoryView.TotalItemsInventory">
            <summary>
                Total number of ItemInventory items in the request result.
            </summary>
            <value>
                The total number of ItemInventory items.
            </value>
        </member>
        <member name="T:QbModels.QbItemNonInventoryView">
            <summary>Results view for ItemNonInventoryQueryRq/ItemNonInventoryAddRq/ItemNonInventoryModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemNonInventoryView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemNonInventoryView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemNonInventoryView.ItemsNonInventory">
            <summary>
                List of ItemNonInventory from QBXML request result.
            </summary>
            <value>
                List of ItemNonInventoryRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemNonInventoryView.TotalItemsNonInventory">
            <summary>
                Total number of ItemNonInventory items in the request result.
            </summary>
            <value>
                The total number of ItemNonInventory items.
            </value>
        </member>
        <member name="T:QbModels.QbItemOtherChargesView">
            <summary>Results view for ItemOtherChargeQueryRq/ItemOtherChargeAddRq/ItemOtherChargeModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemOtherChargesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemOtherChargesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemOtherChargesView.ItemOtherCharges">
            <summary>
                List of ItemOtherCharge from QBXML request result.
            </summary>
            <value>
                List of ItemOtherChargeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemOtherChargesView.TotalItemOtherCharges">
            <summary>
                Total number of ItemOtherCharge items in the request result.
            </summary>
            <value>
                The total number of ItemOtherCharge items.
            </value>
        </member>
        <member name="T:QbModels.QbItemPaymentsView">
            <summary>Results view for ItemPaymentQueryRq/ItemPaymentAddRq/ItemPaymentModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemPaymentsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemPaymentsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemPaymentsView.ItemPayments">
            <summary>
                List of ItemPayment from QBXML request result.
            </summary>
            <value>
                List of ItemPaymentRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemPaymentsView.TotalItemPayments">
            <summary>
                Total number of ItemPayment items in the request result.
            </summary>
            <value>
                The total number of ItemPayment items.
            </value>
        </member>
        <member name="T:QbModels.QbItemReceiptsView">
            <summary>Results view for ItemReceiptQueryRq/ItemReceiptAddRq/ItemReceiptModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemReceiptsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemReceiptsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemReceiptsView.ItemReceipts">
            <summary>
                List of ItemReceipt from QBXML request result.
            </summary>
            <value>
                List of ItemReceiptRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemReceiptsView.TotalItemReceipts">
            <summary>
                Total number of ItemReceipt items in the request result.
            </summary>
            <value>
                The total number of ItemReceipt items.
            </value>
        </member>
        <member name="T:QbModels.QbItemSalesTaxesView">
            <summary>Results view for ItemSalesTaxQueryRq/ItemSalesTaxAddRq/ItemSalesTaxModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemSalesTaxesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemSalesTaxesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemSalesTaxesView.ItemSalesTaxes">
            <summary>
                List of ItemSalesTax from QBXML request result.
            </summary>
            <value>
                List of ItemSalesTaxRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemSalesTaxesView.TotalItemSalesTaxes">
            <summary>
                Total number of ItemSalesTax items in the request result.
            </summary>
            <value>
                The total number of ItemSalesTax items.
            </value>
        </member>
        <member name="T:QbModels.QbItemSalesTaxGroupsView">
            <summary>Results view for ItemSalesTaxGroupQueryRq/ItemSalesTaxGroupAddRq/ItemSalesTaxGroupModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemSalesTaxGroupsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemSalesTaxGroupsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemSalesTaxGroupsView.ItemSalesTaxGroups">
            <summary>
                List of ItemSalesTaxGroup from QBXML request result.
            </summary>
            <value>
                List of ItemSalesTaxGroupRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemSalesTaxGroupsView.TotalItemSalesTaxGroups">
            <summary>
                Total number of ItemSalesTaxGroup items in the request result.
            </summary>
            <value>
                The total number of ItemSalesTaxGroup items.
            </value>
        </member>
        <member name="T:QbModels.QbItemServicesView">
            <summary>Results view for ItemServiceQueryRq/ItemServiceAddRq/ItemServiceModRq calls</summary>
        </member>
        <member name="M:QbModels.QbItemServicesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemServicesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbItemServicesView.ItemServices">
            <summary>
                List of ItemService from QBXML request result.
            </summary>
            <value>
                List of ItemServiceRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbItemServicesView.TotalItemServices">
            <summary>
                Total number of ItemService items in the request result.
            </summary>
            <value>
                The total number of ItemService items.
            </value>
        </member>
        <member name="T:QbModels.QbItemsView">
            <summary>Results view for ItemQueryRq call</summary>
        </member>
        <member name="M:QbModels.QbItemsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbItemsView" /> class.</summary>
            <param name="rsXml">The rs XML.</param>
        </member>
        <member name="P:QbModels.QbItemsView.InventoryItems">
            <summary>Gets the inventory items.</summary>
            <value>The inventory items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.NonInventoryItems">
            <summary>Gets the non inventory items.</summary>
            <value>The non inventory items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.DiscountItems">
            <summary>Gets the discount items.</summary>
            <value>The discount items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.GroupItems">
            <summary>Gets the group items.</summary>
            <value>The group items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.OtherChargeItems">
            <summary>Gets the other charge items.</summary>
            <value>The other charge items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.PaymentItems">
            <summary>Gets the payment items.</summary>
            <value>The payment items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.ServiceItems">
            <summary>Gets the service items.</summary>
            <value>The service items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.SubtotalItems">
            <summary>Gets the subtotal items.</summary>
            <value>The subtotal items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalItems">
            <summary>Gets the total items.</summary>
            <value>The total items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalInventoryItems">
            <summary>Gets the total inventory items.</summary>
            <value>The total inventory items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalNonInventoryItems">
            <summary>Gets the total non inventory items.</summary>
            <value>The total non inventory items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalDiscountItems">
            <summary>Gets the total discount items.</summary>
            <value>The total discount items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalGroupItems">
            <summary>Gets the total group items.</summary>
            <value>The total group items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalOtherChargeItems">
            <summary>Gets the total other charge items.</summary>
            <value>The total other charge items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalPaymentItems">
            <summary>Gets the total payment items.</summary>
            <value>The total payment items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalServiceItems">
            <summary>Gets the total service items.</summary>
            <value>The total service items.</value>
        </member>
        <member name="P:QbModels.QbItemsView.TotalSubtotalItems">
            <summary>Gets the total subtotal items.</summary>
            <value>The total subtotal items.</value>
        </member>
        <member name="M:QbModels.QbItemsView.ReadXml(System.String)">
            <summary>Reads the XML into the class.</summary>
            <param name="qbRs">The source XML to import.</param>
        </member>
        <member name="T:QbModels.QbJobTypesView">
            <summary>Results view for JobTypeQueryRq/JobTypeAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbJobTypesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbJobTypesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbJobTypesView.JobTypes">
            <summary>
                List of JobType from QBXML request result.
            </summary>
            <value>
                List of JobTypeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbJobTypesView.TotalJobTypes">
            <summary>
                Total number of JobType items in the request result.
            </summary>
            <value>
                The total number of JobType items.
            </value>
        </member>
        <member name="T:QbModels.QbJournalEntriesView">
            <summary>Results view for JournalEntryQueryRq/JournalEntryAddRq/JournalEntryModRq calls</summary>
        </member>
        <member name="M:QbModels.QbJournalEntriesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbJournalEntriesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbJournalEntriesView.JournalEntries">
            <summary>
                List of JournalEntry from QBXML request result.
            </summary>
            <value>
                List of JournalEntryRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbJournalEntriesView.TotalJournalEntries">
            <summary>
                Total number of JournalEntry items in the request result.
            </summary>
            <value>
                The total number of JournalEntry items.
            </value>
        </member>
        <member name="T:QbModels.QbLeadsView">
            <summary>Results view for LeadQueryRq/LeadAddRq/LeadModRq calls</summary>
        </member>
        <member name="M:QbModels.QbLeadsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbLeadsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbLeadsView.Leads">
            <summary>
                List of Lead from QBXML request result.
            </summary>
            <value>
                List of LeadRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbLeadsView.TotalLeads">
            <summary>
                Total number of Lead items in the request result.
            </summary>
            <value>
                The total number of Lead items.
            </value>
        </member>
        <member name="T:QbModels.QbOtherNamesView">
            <summary>Results view for OtherNameQueryRq/OtherNameAddRq/OtherNameModRq calls</summary>
        </member>
        <member name="M:QbModels.QbOtherNamesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbOtherNamesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbOtherNamesView.OtherNames">
            <summary>
                List of OtherName from QBXML request result.
            </summary>
            <value>
                List of OtherNameRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbOtherNamesView.TotalOtherNames">
            <summary>
                Total number of OtherName items in the request result.
            </summary>
            <value>
                The total number of OtherName items.
            </value>
        </member>
        <member name="T:QbModels.QbPaymentMethodsView">
            <summary>Results view for PaymentMethodQueryRq/PaymentMethodAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbPaymentMethodsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbPaymentMethodsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbPaymentMethodsView.PaymentMethods">
            <summary>
                List of PaymentMethod from QBXML request result.
            </summary>
            <value>
                List of PaymentMethodRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbPaymentMethodsView.TotalPaymentMethods">
            <summary>
                Total number of PaymentMethod items in the request result.
            </summary>
            <value>
                The total number of PaymentMethod items.
            </value>
        </member>
        <member name="T:QbModels.QbPriceLevelsView">
            <summary>Results view for PriceLevelQueryRq/PriceLevelAddRq/PriceLevelModRq calls</summary>
        </member>
        <member name="M:QbModels.QbPriceLevelsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbPriceLevelsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbPriceLevelsView.PriceLevels">
            <summary>
                List of PriceLevel from QBXML request result.
            </summary>
            <value>
                List of PriceLevelRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbPriceLevelsView.TotalPriceLevels">
            <summary>
                Total number of PriceLevel items in the request result.
            </summary>
            <value>
                The total number of PriceLevel items.
            </value>
        </member>
        <member name="T:QbModels.QbPurchaseOrdersView">
            <summary>Results view for PurchaseOrderQueryRq/PurchaseOrderAddRq/PurchaseOrderModRq calls</summary>
        </member>
        <member name="M:QbModels.QbPurchaseOrdersView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbPurchaseOrdersView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbPurchaseOrdersView.PurchaseOrders">
            <summary>
                List of PurchaseOrder from QBXML request result.
            </summary>
            <value>
                List of PurchaseOrderRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbPurchaseOrdersView.TotalPurchaseOrders">
            <summary>
                Total number of PurchaseOrder items in the request result.
            </summary>
            <value>
                The total number of PurchaseOrder items.
            </value>
        </member>
        <member name="T:QbModels.QbReceivePaymentsView">
            <summary>Results view for ReceivePaymentQueryRq/ReceivePaymentAddRq/ReceivePaymentModRq calls</summary>
        </member>
        <member name="M:QbModels.QbReceivePaymentsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbReceivePaymentsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbReceivePaymentsView.ReceivePayments">
            <summary>
                List of ReceivePayment from QBXML request result.
            </summary>
            <value>
                List of ReceivePaymentRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbReceivePaymentsView.TotalReceivePayments">
            <summary>
                Total number of ReceivePayment items in the request result.
            </summary>
            <value>
                The total number of ReceivePayment items.
            </value>
        </member>
        <member name="T:QbModels.QbSalesOrdersView">
            <summary>Results view for SalesOrderQueryRq/SalesOrderAddRq/SalesOrderModRq calls</summary>
        </member>
        <member name="M:QbModels.QbSalesOrdersView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbSalesOrdersView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbSalesOrdersView.SalesOrders">
            <summary>
                List of SalesOrder from QBXML request result.
            </summary>
            <value>
                List of SalesOrderRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbSalesOrdersView.TotalSalesOrders">
            <summary>
                Total number of SalesOrder items in the request result.
            </summary>
            <value>
                The total number of SalesOrder items.
            </value>
        </member>
        <member name="T:QbModels.QbSalesReceiptsView">
            <summary>Results view for SalesReceiptQueryRq/SalesReceiptAddRq/SalesReceiptModRq calls</summary>
        </member>
        <member name="M:QbModels.QbSalesReceiptsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbSalesReceiptsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbSalesReceiptsView.SalesReceipts">
            <summary>
                List of SalesReceipt from QBXML request result.
            </summary>
            <value>
                List of SalesReceiptRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbSalesReceiptsView.TotalSalesReceipts">
            <summary>
                Total number of SalesReceipt items in the request result.
            </summary>
            <value>
                The total number of SalesReceipt items.
            </value>
        </member>
        <member name="T:QbModels.QbSalesRepsView">
            <summary>Results view for SalesRepQueryRq/SalesRepAddRq/SalesRepModRq calls</summary>
        </member>
        <member name="M:QbModels.QbSalesRepsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbSalesRepsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbSalesRepsView.SalesReps">
            <summary>
                List of SalesRep from QBXML request result.
            </summary>
            <value>
                List of SalesRepRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbSalesRepsView.TotalSalesReps">
            <summary>
                Total number of SalesRep items in the request result.
            </summary>
            <value>
                The total number of SalesRep items.
            </value>
        </member>
        <member name="T:QbModels.QbSalesTaxCodesView">
            <summary>Results view for SalesTaxCodeQueryRq/SalesTaxCodeAddRq/SalesTaxCodeModRq calls</summary>
        </member>
        <member name="M:QbModels.QbSalesTaxCodesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbSalesTaxCodesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbSalesTaxCodesView.SalesTaxCodes">
            <summary>
                List of SalesTaxCode from QBXML request result.
            </summary>
            <value>
                List of SalesTaxCodeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbSalesTaxCodesView.TotalSalesTaxCodes">
            <summary>
                Total number of SalesTaxCode items in the request result.
            </summary>
            <value>
                The total number of SalesTaxCode items.
            </value>
        </member>
        <member name="T:QbModels.QbSalesTaxPaymentChecksView">
            <summary>Results view for SalesTaxPaymentCheckQueryRq/SalesTaxPaymentCheckAddRq/SalesTaxPaymentCheckModRq calls</summary>
        </member>
        <member name="M:QbModels.QbSalesTaxPaymentChecksView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbSalesTaxPaymentChecksView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbSalesTaxPaymentChecksView.SalesTaxPaymentChecks">
            <summary>
                List of SalesTaxPaymentCheck from QBXML request result.
            </summary>
            <value>
                List of SalesTaxPaymentCheckRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbSalesTaxPaymentChecksView.TotalSalesTaxPaymentChecks">
            <summary>
                Total number of SalesTaxPaymentCheck items in the request result.
            </summary>
            <value>
                The total number of SalesTaxPaymentCheck items.
            </value>
        </member>
        <member name="T:QbModels.QbShipMethodsView">
            <summary>Results view for ShipMethodQueryRq/ShipMethodAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbShipMethodsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbShipMethodsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbShipMethodsView.ShipMethods">
            <summary>
                List of ShipMethod from QBXML request result.
            </summary>
            <value>
                List of ShipMethodRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbShipMethodsView.TotalShipMethods">
            <summary>
                Total number of ShipMethod items in the request result.
            </summary>
            <value>
                The total number of ShipMethod items.
            </value>
        </member>
        <member name="T:QbModels.QbTimeTrackingView">
            <summary>Results view for TimeTrackingQueryRq/TimeTrackingAddRq/TimeTrackingModRq calls</summary>
        </member>
        <member name="M:QbModels.QbTimeTrackingView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbTimeTrackingView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbTimeTrackingView.TimeTracking">
            <summary>
                List of TimeTracking from QBXML request result.
            </summary>
            <value>
                List of TimeTrackingRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbTimeTrackingView.TotalTimeTracking">
            <summary>
                Total number of TimeTracking items in the request result.
            </summary>
            <value>
                The total number of TimeTracking items.
            </value>
        </member>
        <member name="T:QbModels.QbToDosView">
            <summary>Results view for ToDoQueryRq/ToDoAddRq/ToDoModRq calls</summary>
        </member>
        <member name="M:QbModels.QbToDosView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbToDosView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbToDosView.ToDos">
            <summary>
                List of ToDo from QBXML request result.
            </summary>
            <value>
                List of ToDoRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbToDosView.TotalToDos">
            <summary>
                Total number of ToDo items in the request result.
            </summary>
            <value>
                The total number of ToDo items.
            </value>
        </member>
        <member name="T:QbModels.QbTransactionsView">
            <summary>Results view for TransactionQueryRq call</summary>
        </member>
        <member name="M:QbModels.QbTransactionsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbTransactionsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbTransactionsView.Transactions">
            <summary>
                List of Transaction from QBXML request result.
            </summary>
            <value>
                List of TransactionRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbTransactionsView.TotalTransactions">
            <summary>
                Total number of Transaction items in the request result.
            </summary>
            <value>
                The total number of Transaction items.
            </value>
        </member>
        <member name="T:QbModels.QbTxnDeletedView">
            <summary>Results view for TxnDeletedRq call</summary>
        </member>
        <member name="M:QbModels.QbTxnDeletedView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbTxnDeletedView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbTxnDeletedView.TxnsDeleted">
            <summary>
                List of TxnDeleted from QBXML request result.
            </summary>
            <value>
                List of TxnDeletedRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbTxnDeletedView.TotalTxnsDeleted">
            <summary>
                Total number of TxnDeleted items in the request result.
            </summary>
            <value>
                The total number of TxnDeleted items.
            </value>
        </member>
        <member name="T:QbModels.QbTxnDelView">
            <summary>Results view for TxnDelRq call</summary>
        </member>
        <member name="M:QbModels.QbTxnDelView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbTxnDelView" /> class.</summary>
            <param name="rsXml">The rs XML.</param>
        </member>
        <member name="P:QbModels.QbTxnDelView.TxnDel">
            <summary>TxnDel from result</summary>
            <value>TxnDelRsDto</value>
        </member>
        <member name="M:QbModels.QbTxnDelView.ReadXml(System.String)">
            <summary>Reads the XML into the class.</summary>
            <param name="qbRs">The source XML to import.</param>
        </member>
        <member name="T:QbModels.QbTxnVoidView">
            <summary>Results view for TxnVoidRq call</summary>
        </member>
        <member name="M:QbModels.QbTxnVoidView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbTxnVoidView" /> class.</summary>
            <param name="rsXml">The rs XML.</param>
        </member>
        <member name="P:QbModels.QbTxnVoidView.TxnVoid">
            <summary>TxnVoid from result</summary>
            <value>TxnVoidRsDto</value>
        </member>
        <member name="M:QbModels.QbTxnVoidView.ReadXml(System.String)">
            <summary>Reads the XML into the class.</summary>
            <param name="qbRs">The source XML to import.</param>
        </member>
        <member name="T:QbModels.QbVendorCreditsView">
            <summary>Results view for VendorCreditQueryRq/VendorCreditAddRq/VendorCreditModRq calls</summary>
        </member>
        <member name="M:QbModels.QbVendorCreditsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbVendorCreditsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbVendorCreditsView.VendorCredits">
            <summary>
                List of VendorCredit from QBXML request result.
            </summary>
            <value>
                List of VendorCreditRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbVendorCreditsView.TotalVendorCredits">
            <summary>
                Total number of VendorCredit items in the request result.
            </summary>
            <value>
                The total number of VendorCredit items.
            </value>
        </member>
        <member name="T:QbModels.QbVendorsView">
            <summary>Results view for VendorQueryRq/VendorAddRq/VendorModRq calls</summary>
        </member>
        <member name="M:QbModels.QbVendorsView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbVendorsView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbVendorsView.Vendors">
            <summary>
                List of Vendor from QBXML request result.
            </summary>
            <value>
                List of VendorRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbVendorsView.TotalVendors">
            <summary>
                Total number of Vendor items in the request result.
            </summary>
            <value>
                The total number of Vendor items.
            </value>
        </member>
        <member name="T:QbModels.QbVendorTypesView">
            <summary>Results view for VendorTypeQueryRq/VendorTypeAddRq calls</summary>
        </member>
        <member name="M:QbModels.QbVendorTypesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbVendorTypesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbVendorTypesView.VendorTypes">
            <summary>
                List of VendorType from QBXML request result.
            </summary>
            <value>
                List of VendorTypeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbVendorTypesView.TotalVendorTypes">
            <summary>
                Total number of VendorType items in the request result.
            </summary>
            <value>
                The total number of VendorType items.
            </value>
        </member>
        <member name="T:QbModels.QbWorkersCompCodesView">
            <summary>Results view for WorkersCompCodeQueryRq/WorkersCompCodeAddRq/WorkersCompCodeModRq calls</summary>
        </member>
        <member name="M:QbModels.QbWorkersCompCodesView.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:QbModels.QbWorkersCompCodesView" /> class.</summary>
            <param name="rsXml">QBXML string result</param>
        </member>
        <member name="P:QbModels.QbWorkersCompCodesView.WorkersCompCodes">
            <summary>
                List of WorkersCompCode from QBXML request result.
            </summary>
            <value>
                List of WorkersCompCodeRetDto.
            </value>
        </member>
        <member name="P:QbModels.QbWorkersCompCodesView.TotalWorkersCompCodes">
            <summary>
                Total number of WorkersCompCode items in the request result.
            </summary>
            <value>
                The total number of WorkersCompCode items.
            </value>
        </member>
        <member name="T:QbHelpers.QbConstants">
            <summary>Global static constants that can be accessed from anywhere in the program.</summary>
        </member>
        <member name="T:QbHelpers.QbFunctions">
            <summary>QbFunctions Class</summary>
        </member>
        <member name="M:QbHelpers.QbFunctions.ToView``1(System.String)">
            <summary>Converts to view.</summary>
            <typeparam name="T">Object of type T to convert XML string into.</typeparam>
            <param name="xml">The XML.</param>
            <returns>Object of type T</returns> 
        </member>
        <member name="M:QbHelpers.QbFunctions.ToView``1(System.String,``0@)">
            <summary>Converts to view.</summary>
            <typeparam name="T">Object of type T to convert XML string into.</typeparam>
            <param name="xml">The XML.</param>
            <param name="view">View object to save to.</param>
        </member>
        <member name="M:QbHelpers.QbFunctions.ToQbDate(System.DateTime)">
            <summary>Converts to qbdate.</summary>
            <param name="date">The source date in string format.</param>
            <returns>A date formatted string that is formatted for the Quickbooks processor.</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.ToQbDate(System.String)">
            <summary>Converts to qbdate.</summary>
            <param name="date">The source date in string format.</param>
            <returns>A date formatted string that is formatted for the Quickbooks processor.</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.ToQbMoney(System.Decimal)">
            <summary>Converts to qbmoney.</summary>
            <param name="amount">Quickbooks amount in decimal.</param>
            <returns>A decimal number without currency identifiers and commas.</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.ToQbDecimal(System.Decimal)">
            <summary>Converts to qbdecimal.</summary>
            <param name="src">The source decimal.</param>
            <returns>A decimal that is formatted for the Quickbooks processor.</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.ToQbTime(System.Decimal)">
            <summary>Converts to qbtime.</summary>
            <param name="decTime">Quickbooks time in decimal format</param>
            <returns>A string formatted that Quickbooks processor will accept.</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.FromQbTime(System.String)">
            <summary>Converts from qbtime.</summary>
            <param name="qbTime">Quickbooks time in PTxxHxxM format</param>
            <returns>decimal</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.GetFirstName(System.String)">
            <summary>Gets the first name from a full name string.</summary>
            <param name="strFullName">Full name of the string.</param>
            <returns>First name</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.GetLastName(System.String)">
            <summary>Gets the last name from a full name string.</summary>
            <param name="strFullName">Full name of the string.</param>
            <returns>Last name</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.GetInitials(System.String)">
            <summary>Gets the initials from a full name string.</summary>
            <param name="strName">Full name of the string.</param>
            <returns>Name's initials</returns>
        </member>
        <member name="M:QbHelpers.QbFunctions.CopyTo(System.Data.DataSet,System.Data.DataSet)">
            <summary>Copies to.</summary>
            <param name="sourceDataSet">The source data set.</param>
            <param name="destDataSet">The dest data set.</param>
        </member>
        <member name="M:QbHelpers.QbFunctions.CopyTo(System.Data.DataTable,System.Data.DataTable)">
            <summary>Copies to.</summary>
            <param name="sourceTable">The source data table.</param>
            <param name="destTable">The dest data table.</param>
        </member>
        <member name="M:QbHelpers.QbFunctions.EncodeString(System.String)">
            <summary>Encodes the string.</summary>
            <param name="strXML">The source string.</param>
            <returns>HTML encoded string.</returns>
        </member>
        <member name="T:QbHelpers.XmlHelper">
            <summary>XmlHelper Class</summary>
        </member>
        <member name="M:QbHelpers.XmlHelper.SetSdkVersion(System.String)">
            <summary>Sets the SDK version to specify in the QBXML.</summary>
            <param name="version">The QBXML version number.</param>
        </member>
        <member name="M:QbHelpers.XmlHelper.BuildQbRequest(System.Xml.XmlDocument,System.String)">
            <summary>DEPRECATED Builds the base qb XML request for querying Quickbooks items.</summary>
            <param name="xmlDoc">The source variable of type XmlDocument for the XML request.</param>
            <param name="requestType">The Qb request type.</param>
        </member>
        <member name="M:QbHelpers.XmlHelper.ReadXMLString(System.String)">
            <summary>Create XmlReader for XML processing of string variables</summary>
            <param name="strXMLSource">The string XML source.</param>
            <returns>XmlReader</returns>
        </member>
        <member name="M:QbHelpers.XmlHelper.ReadXMLFile(System.String)">
            <summary>Create XmlTextReader for XML processing of text files.</summary>
            <param name="src">Name of file to open.</param>
            <returns>XmlTextReader</returns>
        </member>
        <member name="M:QbHelpers.XmlHelper.ToModel``2(``0)">
            <summary>Adds object of type T to object of type T2 where name of T exists as a property of T2.</summary>
            <typeparam name="T">The source object type to read from.</typeparam>
            <typeparam name="T2">The destination object property to write data to.</typeparam>
            <param name="src">The source object to read data from.</param>
            <returns>An object of type T2</returns>
        </member>
        <member name="M:QbHelpers.XmlHelper.ToModel``3(``0)">
            <summary>
            Converts an object of type T to object of type T2 where both objects have matching property names.  
            Then object of type T2 is inserted into object of type T3 where property of T3 matches nameof(T2).
            </summary>
            <typeparam name="T">The source object type to read from.</typeparam>
            <typeparam name="T2">The destination object type to write data to.</typeparam>
            <typeparam name="T3">The destination object type to write data to.</typeparam>
            <param name="src">The source object to read data from.</param>
            <returns>An object of type T2</returns>
        </member>
        <member name="M:QbHelpers.XmlHelper.ToPlainXML``1(``0,System.Boolean)">
            <summary>Takes an object of type T and converts it to an XML string.</summary>
            <typeparam name="T">Object of type T to read data from.</typeparam>
            <param name="obj">The object to read from.</param>
            <param name="omitXmlDeclarations">Omit declarations from generated XML.</param>
            <returns>An XML string without namespace information and header information.</returns>
        </member>
    </members>
</doc>
